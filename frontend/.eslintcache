[{"/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/components/ScrollToTop.js":"1","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/components/ProductCart.js":"2","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/constants/infoBoxConstants.js":"3","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/components/UI/CustomedButton.js":"4","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/components/ProductCardCarousel.js":"5","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/components/InfoBox.js":"6","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/store.js":"7","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/App.js":"8","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/index.js":"9","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/components/Navigation/MiddleNavbar.js":"10","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/reducers/coverReducers.js":"11","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/reducers/orderReducers.js":"12","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/reducers/userReducers.js":"13","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/constants/coverConstants.js":"14","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/actions/advertisingBoxActions.js":"15","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/actions/cartActions.js":"16","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/components/ProductImagesCard.js":"17","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/components/ProductCarousel.js":"18","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/components/PrivateRoute.js":"19","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/reducers/recommendedCategoryReducers.js":"20","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/constants/userConstants.js":"21","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/constants/advertisingBoxConstants.js":"22","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/actions/recommendedCategoryActions.js":"23","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/reducers/bannerReducers.js":"24","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/actions/bannerActions.js":"25","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/components/SideBar.js":"26","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/components/MessageBox.js":"27","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/constants/productConstants.js":"28","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/components/ProductDescription.js":"29","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/components/Banner.js":"30","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/components/Newsletter.js":"31","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/actions/productActions.js":"32","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/reducers/newsletterReducers.js":"33","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/actions/newsletterActions.js":"34","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/reducers/cartReducers.js":"35","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/components/LoadingBox.js":"36","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/components/UI/Input.js":"37","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/components/CategoryBox.js":"38","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/components/Footer.js":"39","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/components/Navigation/BottomNavbar.js":"40","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/constants/bannerConstants.js":"41","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/actions/coverActions.js":"42","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/components/Navigation/SearchBox.js":"43","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/components/Navigation/TopNavbar.js":"44","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/components/UI/FileUpload.js":"45","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/components/AdminRoute.js":"46","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/components/AdvertisingBox.js":"47","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/components/CheckoutSteps.js":"48","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/components/ProductDeliveryDetails.js":"49","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/reducers/infoBoxReducers.js":"50","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/constants/cartConstants.js":"51","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/constants/recommendedCategoryConstants.js":"52","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/actions/userActions.js":"53","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/reducers/productReducers.js":"54","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/constants/orderConstants.js":"55","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/components/AccountDetailsBox.js":"56","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/components/SettingsBox.js":"57","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/reducers/boxReducers.js":"58","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/constants/newsletterConstants.js":"59","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/components/CoverCarousel.js":"60","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/actions/orderActions.js":"61","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/actions/infoBoxActions.js":"62","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/containers/Screens/PaymentMethodScreen.js":"63","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/containers/Screens/ProductScreen.js":"64","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/containers/Screens/SearchScreen.js":"65","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/containers/Screens/RecommendedCategoryEditScreen.js":"66","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/containers/Screens/InfoBoxListScreen.js":"67","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/containers/Screens/PrivacyPolicyScreen.js":"68","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/containers/Screens/AccountDetailsScreen.js":"69","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/containers/Screens/AdvertisingBoxEditScreen.js":"70","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/containers/Screens/AdvertisingBoxListScreen.js":"71","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/containers/Screens/BannerEditScreen.js":"72","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/containers/Screens/BannerListScreen.js":"73","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/containers/Screens/CartScreen.js":"74","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/containers/Screens/CategoryScreen.js":"75","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/containers/Screens/ConditionOfPurchaseScreen.js":"76","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/containers/Screens/CoverEditScreen.js":"77","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/containers/Screens/CoverListScreen.js":"78","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/containers/Screens/HomeScreen.js":"79","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/containers/Screens/InfoBoxEditScreen.js":"80","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/containers/Screens/LoyaltyProgramScreen.js":"81","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/containers/Screens/MapScreen.js":"82","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/containers/Screens/OrderHistoryScreen.js":"83","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/containers/Screens/OrderListScreen.js":"84","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/containers/Screens/OrderScreen.js":"85","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/containers/Screens/ProductEditScreen.js":"86","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/containers/Screens/ProductListScreen.js":"87","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/containers/Screens/ProfileScreen.js":"88","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/containers/Screens/RecommendedCategoryListScreen.js":"89","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/containers/Screens/ReturnPolicyScreen.js":"90","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/containers/Screens/SettingsScreen.js":"91","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/containers/Screens/SubcategoryScreen.js":"92","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/containers/Screens/UserEditScreen.js":"93","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/containers/Screens/UserInvoiceAddressScreen.js":"94","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/containers/Screens/UserListScreen.js":"95","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/containers/Screens/ShippingAddressScreen.js":"96","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/containers/Screens/RegisterScreen.js":"97","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/containers/Screens/PlaceOrderScreen.js":"98","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/containers/Screens/ShippingMethodScreen.js":"99","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/containers/Screens/SigninScreen.js":"100","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/containers/Screens/NewsletterListScreen.js":"101","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/constants/contactFormConstants.js":"102","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/reducers/contactFormReducers.js":"103","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/containers/Screens/ContactUsScreen.js":"104","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/containers/Screens/AdminMessageListScreen.js":"105","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/actions/contactFormActions.js":"106","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/containers/Screens/AboutUsScreen.js":"107","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/containers/Screens/MessageDetailsScreen.js":"108"},{"size":263,"mtime":1612373652517,"results":"109","hashOfConfig":"110"},{"size":1045,"mtime":1612376654417,"results":"111","hashOfConfig":"110"},{"size":1107,"mtime":1611004069413,"results":"112","hashOfConfig":"110"},{"size":822,"mtime":1611248819915,"results":"113","hashOfConfig":"110"},{"size":826,"mtime":1612373603786,"results":"114","hashOfConfig":"110"},{"size":826,"mtime":1612373040051,"results":"115","hashOfConfig":"110"},{"size":5353,"mtime":1612627356363,"results":"116","hashOfConfig":"110"},{"size":8622,"mtime":1612715725427,"results":"117","hashOfConfig":"110"},{"size":365,"mtime":1612372543043,"results":"118","hashOfConfig":"110"},{"size":518,"mtime":1612373679311,"results":"119","hashOfConfig":"110"},{"size":2608,"mtime":1610388969415,"results":"120","hashOfConfig":"110"},{"size":3720,"mtime":1612473743791,"results":"121","hashOfConfig":"110"},{"size":3693,"mtime":1612469417019,"results":"122","hashOfConfig":"110"},{"size":1035,"mtime":1610388134531,"results":"123","hashOfConfig":"110"},{"size":3772,"mtime":1610495772627,"results":"124","hashOfConfig":"110"},{"size":1664,"mtime":1610637633104,"results":"125","hashOfConfig":"110"},{"size":1815,"mtime":1612373638672,"results":"126","hashOfConfig":"110"},{"size":2578,"mtime":1612373622402,"results":"127","hashOfConfig":"110"},{"size":531,"mtime":1612373600920,"results":"128","hashOfConfig":"110"},{"size":3292,"mtime":1610409162099,"results":"129","hashOfConfig":"110"},{"size":1807,"mtime":1610055956562,"results":"130","hashOfConfig":"110"},{"size":1395,"mtime":1610449908408,"results":"131","hashOfConfig":"110"},{"size":4032,"mtime":1610408903281,"results":"132","hashOfConfig":"110"},{"size":2654,"mtime":1612372488105,"results":"133","hashOfConfig":"110"},{"size":3319,"mtime":1611098789297,"results":"134","hashOfConfig":"110"},{"size":1771,"mtime":1611249100192,"results":"135","hashOfConfig":"110"},{"size":220,"mtime":1612373047775,"results":"136","hashOfConfig":"110"},{"size":1850,"mtime":1611589099133,"results":"137","hashOfConfig":"110"},{"size":348,"mtime":1612373635587,"results":"138","hashOfConfig":"110"},{"size":591,"mtime":1612373020357,"results":"139","hashOfConfig":"110"},{"size":2595,"mtime":1612724944469,"results":"140","hashOfConfig":"110"},{"size":4384,"mtime":1612218528034,"results":"141","hashOfConfig":"110"},{"size":2271,"mtime":1612546790505,"results":"142","hashOfConfig":"110"},{"size":2959,"mtime":1612723911124,"results":"143","hashOfConfig":"110"},{"size":1480,"mtime":1610567213522,"results":"144","hashOfConfig":"110"},{"size":339,"mtime":1612373042713,"results":"145","hashOfConfig":"110"},{"size":1307,"mtime":1611248812189,"results":"146","hashOfConfig":"110"},{"size":643,"mtime":1612373023302,"results":"147","hashOfConfig":"110"},{"size":4873,"mtime":1612467072670,"results":"148","hashOfConfig":"110"},{"size":5712,"mtime":1612637326692,"results":"149","hashOfConfig":"110"},{"size":1071,"mtime":1611098357431,"results":"150","hashOfConfig":"110"},{"size":3267,"mtime":1610389564210,"results":"151","hashOfConfig":"110"},{"size":752,"mtime":1612373681591,"results":"152","hashOfConfig":"110"},{"size":2071,"mtime":1612637314148,"results":"153","hashOfConfig":"110"},{"size":379,"mtime":1611248816194,"results":"154","hashOfConfig":"110"},{"size":547,"mtime":1612373014878,"results":"155","hashOfConfig":"110"},{"size":637,"mtime":1612373017424,"results":"156","hashOfConfig":"110"},{"size":638,"mtime":1612373025740,"results":"157","hashOfConfig":"110"},{"size":2751,"mtime":1612725336785,"results":"158","hashOfConfig":"110"},{"size":2702,"mtime":1611004828483,"results":"159","hashOfConfig":"110"},{"size":473,"mtime":1610567111951,"results":"160","hashOfConfig":"110"},{"size":1575,"mtime":1610408890927,"results":"161","hashOfConfig":"110"},{"size":5426,"mtime":1612470481293,"results":"162","hashOfConfig":"110"},{"size":3805,"mtime":1612218521546,"results":"163","hashOfConfig":"110"},{"size":1443,"mtime":1609171266295,"results":"164","hashOfConfig":"110"},{"size":1134,"mtime":1612373011336,"results":"165","hashOfConfig":"110"},{"size":1921,"mtime":1612479921007,"results":"166","hashOfConfig":"110"},{"size":3060,"mtime":1612372490213,"results":"167","hashOfConfig":"110"},{"size":944,"mtime":1611172573377,"results":"168","hashOfConfig":"110"},{"size":872,"mtime":1612373028431,"results":"169","hashOfConfig":"110"},{"size":5192,"mtime":1612626363091,"results":"170","hashOfConfig":"110"},{"size":3377,"mtime":1611004687043,"results":"171","hashOfConfig":"110"},{"size":2478,"mtime":1612372005244,"results":"172","hashOfConfig":"110"},{"size":4586,"mtime":1612732614362,"results":"173","hashOfConfig":"110"},{"size":10482,"mtime":1612732738194,"results":"174","hashOfConfig":"110"},{"size":6274,"mtime":1612372240641,"results":"175","hashOfConfig":"110"},{"size":5154,"mtime":1612371762924,"results":"176","hashOfConfig":"110"},{"size":4098,"mtime":1612713867956,"results":"177","hashOfConfig":"110"},{"size":943,"mtime":1612370794410,"results":"178","hashOfConfig":"110"},{"size":6238,"mtime":1612371099959,"results":"179","hashOfConfig":"110"},{"size":5665,"mtime":1612371135697,"results":"180","hashOfConfig":"110"},{"size":6942,"mtime":1612371215583,"results":"181","hashOfConfig":"110"},{"size":5574,"mtime":1612371226308,"results":"182","hashOfConfig":"110"},{"size":5727,"mtime":1612371236997,"results":"183","hashOfConfig":"110"},{"size":11032,"mtime":1612377036354,"results":"184","hashOfConfig":"110"},{"size":4142,"mtime":1612714009706,"results":"185","hashOfConfig":"110"},{"size":5818,"mtime":1612637885514,"results":"186","hashOfConfig":"110"},{"size":5073,"mtime":1612637897799,"results":"187","hashOfConfig":"110"},{"size":3983,"mtime":1612371564878,"results":"188","hashOfConfig":"110"},{"size":6792,"mtime":1612371755348,"results":"189","hashOfConfig":"110"},{"size":4102,"mtime":1612713834057,"results":"190","hashOfConfig":"110"},{"size":3809,"mtime":1612371787399,"results":"191","hashOfConfig":"110"},{"size":4360,"mtime":1612474088847,"results":"192","hashOfConfig":"110"},{"size":5676,"mtime":1612473264765,"results":"193","hashOfConfig":"110"},{"size":8590,"mtime":1612725546896,"results":"194","hashOfConfig":"110"},{"size":14993,"mtime":1612732617747,"results":"195","hashOfConfig":"110"},{"size":5156,"mtime":1612372021274,"results":"196","hashOfConfig":"110"},{"size":7201,"mtime":1612372028959,"results":"197","hashOfConfig":"110"},{"size":5897,"mtime":1612372260122,"results":"198","hashOfConfig":"110"},{"size":4092,"mtime":1612714049161,"results":"199","hashOfConfig":"110"},{"size":893,"mtime":1612372277142,"results":"200","hashOfConfig":"110"},{"size":11070,"mtime":1612378225195,"results":"201","hashOfConfig":"110"},{"size":5584,"mtime":1612372461189,"results":"202","hashOfConfig":"110"},{"size":8071,"mtime":1612732740143,"results":"203","hashOfConfig":"110"},{"size":5199,"mtime":1612473071373,"results":"204","hashOfConfig":"110"},{"size":6225,"mtime":1612376267987,"results":"205","hashOfConfig":"110"},{"size":3693,"mtime":1612372264619,"results":"206","hashOfConfig":"110"},{"size":6573,"mtime":1612725479642,"results":"207","hashOfConfig":"110"},{"size":2954,"mtime":1612372432251,"results":"208","hashOfConfig":"110"},{"size":2691,"mtime":1612372437260,"results":"209","hashOfConfig":"110"},{"size":4784,"mtime":1612552290196,"results":"210","hashOfConfig":"110"},{"size":1201,"mtime":1612627416064,"results":"211","hashOfConfig":"110"},{"size":2941,"mtime":1612636062768,"results":"212","hashOfConfig":"110"},{"size":7391,"mtime":1612713672867,"results":"213","hashOfConfig":"110"},{"size":4159,"mtime":1612714107905,"results":"214","hashOfConfig":"110"},{"size":3782,"mtime":1612724056268,"results":"215","hashOfConfig":"110"},{"size":4080,"mtime":1612713734081,"results":"216","hashOfConfig":"110"},{"size":2997,"mtime":1612732649872,"results":"217","hashOfConfig":"110"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},"wiqiua",{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"231"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"220"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"258"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"220"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"266"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"220"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"281"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"294","usedDeprecatedRules":"236"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"301","usedDeprecatedRules":"236"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"231"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"346"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"349"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"231"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"358","messages":"359","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"349"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"362","usedDeprecatedRules":"266"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"367","messages":"368","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"369","messages":"370","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"371","usedDeprecatedRules":"236"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"281"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"376","messages":"377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"266"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"380","usedDeprecatedRules":"316"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"385","usedDeprecatedRules":"236"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"266"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"392","usedDeprecatedRules":"316"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"397","usedDeprecatedRules":"239"},{"filePath":"398","messages":"399","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"400","messages":"401","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"402","messages":"403","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"404","usedDeprecatedRules":"258"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"407","messages":"408","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"231"},{"filePath":"411","messages":"412","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"413","messages":"414","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"415","messages":"416","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"417","messages":"418","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"421","messages":"422","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"423","messages":"424","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"425","messages":"426","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"349"},{"filePath":"427","messages":"428","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"429","usedDeprecatedRules":"231"},{"filePath":"430","messages":"431","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"266"},{"filePath":"432","messages":"433","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"434","messages":"435","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"349"},{"filePath":"436","messages":"437","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"438","messages":"439","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"440","messages":"441","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"442","messages":"443","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"444","messages":"445","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"446","messages":"447","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"448","usedDeprecatedRules":"220"},{"filePath":"449","messages":"450","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"451","messages":"452","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"453","messages":"454","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"455","messages":"456","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"457","messages":"458","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"459","usedDeprecatedRules":"258"},{"filePath":"460","messages":"461","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"462","messages":"463","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/components/ScrollToTop.js",[],["464","465"],"/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/components/ProductCart.js",[],"/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/constants/infoBoxConstants.js",[],"/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/components/UI/CustomedButton.js",[],"/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/components/ProductCardCarousel.js",[],"/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/components/InfoBox.js",[],["466","467"],"/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/store.js",[],"/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/App.js",[],["468","469"],"/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/index.js",[],["470","471"],"/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/components/Navigation/MiddleNavbar.js",[],"/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/reducers/coverReducers.js",[],["472","473"],"/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/reducers/orderReducers.js",[],"/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/reducers/userReducers.js",[],["474","475"],"/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/constants/coverConstants.js",[],"/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/actions/advertisingBoxActions.js",["476"],"import Axios from 'axios';\nimport {   ADVERTISING_BOX_CREATE_FAIL,\n    ADVERTISING_BOX_CREATE_REQUEST,\n    ADVERTISING_BOX_CREATE_SUCCESS,\n    ADVERTISING_BOX_DETAILS_FAIL,\n    ADVERTISING_BOX_DETAILS_REQUEST,\n    ADVERTISING_BOX_DETAILS_SUCCESS,\n    ADVERTISING_BOX_LIST_FAIL,\n    ADVERTISING_BOX_LIST_REQUEST,\n    ADVERTISING_BOX_LIST_SUCCESS,\n    ADVERTISING_BOX_UPDATE_REQUEST,\n    ADVERTISING_BOX_UPDATE_SUCCESS,\n    ADVERTISING_BOX_UPDATE_FAIL,\n    ADVERTISING_BOX_DELETE_REQUEST,\n    ADVERTISING_BOX_DELETE_FAIL,\n    ADVERTISING_BOX_DELETE_SUCCESS, } from '../constants/advertisingBoxConstants';\n\n\nexport const listAdvertisingBoxes = () => async (dispatch) => {\n    dispatch({ type: ADVERTISING_BOX_LIST_REQUEST });\n    try {\n        const { data } = await Axios.get(\"/api/advertisingboxes\");\n        dispatch({ type: ADVERTISING_BOX_LIST_SUCCESS, payload: data })\n    }\n    catch (error) {\n        dispatch({ type: ADVERTISING_BOX_LIST_FAIL, payload: error.message })\n    }\n}\n\nexport const detailsAdvertisingBox = (advertisingBoxId) => async (dispatch) => {\n    dispatch({ type: ADVERTISING_BOX_DETAILS_REQUEST, payload: advertisingBoxId });\n    try {\n      const { data } = await Axios.get(`/api/advertisingboxes/${advertisingBoxId}`);\n      dispatch({ type: ADVERTISING_BOX_DETAILS_SUCCESS, payload: data });\n    } catch (error) {\n      dispatch({\n        type: ADVERTISING_BOX_DETAILS_FAIL,\n        payload:\n          error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n      });\n    }\n  };\n\n  export const createAdvertisingBox = () => async (dispatch, getState) => {\n    dispatch({ type: ADVERTISING_BOX_CREATE_REQUEST });\n    const {\n      userSignin: { userInfo },\n    } = getState();\n    try {\n      const { data } = await Axios.post(\n        '/api/advertisingboxes',\n        {},\n        {\n          headers: { Authorization: `Bearer ${userInfo.token}` },\n        }\n      );\n      dispatch({\n        type: ADVERTISING_BOX_CREATE_SUCCESS,\n        payload: data.advertisingBox,\n      });\n    } catch (error) {\n      const message =\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message;\n      dispatch({ type: ADVERTISING_BOX_CREATE_FAIL, payload: message });\n    }\n  };\n\n  export const updateAdvertisingBox = (advertisingBox) => async (dispatch, getState) => {\n    dispatch({ type: ADVERTISING_BOX_UPDATE_REQUEST, payload: advertisingBox });\n    const {\n      userSignin: { userInfo },\n    } = getState();\n    try {\n      const { data } = await Axios.put(`/api/advertisingboxes/${advertisingBox._id}`, advertisingBox, {\n        headers: { Authorization: `Bearer ${userInfo.token}` },\n      });\n      dispatch({ type: ADVERTISING_BOX_UPDATE_SUCCESS, payload: data });\n    } catch (error) {\n      const message =\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message;\n      dispatch({ type: ADVERTISING_BOX_UPDATE_FAIL, error: message });\n    }\n  };\n\n  export const deleteAdvertisingBox = (advertisingBoxId) => async (dispatch, getState) => {\n    dispatch({ type: ADVERTISING_BOX_DELETE_REQUEST, payload: advertisingBoxId });\n    const {\n      userSignin: { userInfo },\n    } = getState();\n    try {\n      const { data } = Axios.delete(`/api/advertisingboxes/${advertisingBoxId}`, {\n        headers: { Authorization: `Bearer ${userInfo.token}` },\n      });\n      dispatch({ type: ADVERTISING_BOX_DELETE_SUCCESS });\n    } catch (error) {\n      const message =\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message;\n      dispatch({ type: ADVERTISING_BOX_DELETE_FAIL, payload: message });\n    }\n  };","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/actions/cartActions.js",["477"],"import Axios from 'axios';\nimport { CART_ADD_ITEM, CART_ADD_ITEM_FAIL, CART_REMOVE_ITEM, CART_SAVE_INVOICE_ADDRESS, CART_SAVE_PAYMENT_METHOD, CART_SAVE_SHIPPING_ADDRESS, CART_SAVE_SHIPPING_METHOD } from '../constants/cartConstants';\n\nexport const addToCart = (productId, qty) => async (dispatch, getState) => {\n    const { data } = await Axios.get(`/api/products/${productId}`);\n      dispatch({\n        type: CART_ADD_ITEM,\n        payload: {\n          name: data.name,\n          image: data.image,\n          price: data.price,\n          countInStock: data.countInStock,\n          deliveryTime: data.deliveryTime,\n          product: data._id,\n          // seller: data.seller,\n          qty,\n        },\n      });\n      localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\n  };\n\nexport const removeFromCart = (productId) => (dispatch, getState) => {\n    dispatch({ type: CART_REMOVE_ITEM, payload: productId });\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\n};\n\nexport const saveShippingAddress = (data) => (dispatch) => {\n  dispatch({ type: CART_SAVE_SHIPPING_ADDRESS, payload: data });\n  localStorage.setItem('shippingAddress', JSON.stringify(data));\n};\n\nexport const saveShippingMethod = (data) => (dispatch) => {\n  dispatch ({ type: CART_SAVE_SHIPPING_METHOD, payload: data});\n};\n\nexport const saveInvoiceAddress = (data) => (dispatch) => {\n  dispatch({ type: CART_SAVE_INVOICE_ADDRESS, payload: data });\n  localStorage.setItem('invoiceAddress', JSON.stringify(data));\n};\n\nexport const savePaymentMethod = (data) => (dispatch) => {\n  dispatch ({ type: CART_SAVE_PAYMENT_METHOD, payload: data});\n};\n\n",["478","479"],"/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/components/ProductImagesCard.js",[],"/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/components/ProductCarousel.js",["480","481"],"import React, { useEffect } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { listProducts } from '../actions/productActions';\n\nimport LoadingBox from './LoadingBox';\nimport MessageBox from './MessageBox';\nimport ProductCardCarousel from './ProductCardCarousel';\n\nimport Carousel from \"react-multi-carousel\";\nimport Col from 'react-bootstrap/Col';\nimport \"react-multi-carousel/lib/styles.css\";\n\n\n\nconst ProductCarousel = (props) => {\n\n    const dispatch = useDispatch();\n    \n    const productList = useSelector( state => state.productList);\n    const { loading, error, products } = productList;\n\n    useEffect(() => {\n        dispatch(listProducts({}));\n    }, [dispatch]);\n\n    const responsive = {\n        superLargeDesktop: {\n            breakpoint: { max: 4000, min: 1200 },\n            items: 5\n        },\n        largeDesktop: {\n            breakpoint: { max: 1200, min: 992 },\n            items: 4\n        },\n        desktop: {\n            breakpoint: { max: 992, min: 768 },\n            items: 3\n        },\n        tablet: {\n            breakpoint: { max: 768, min: 576 },\n            items: 2\n        },\n        mobile: {\n            breakpoint: { max: 576, min: 0 },\n            items: 1\n        }\n    };\n\n    return (\n        <Col className=\"product-carousel\">\n        {props.element === \"CarouselByTag\" ? (\n            <h3><strong>{props.tag}</strong></h3>\n        ) : (\n            <h3><strong>Other products in the same category</strong></h3>\n        )}\n        {loading? (\n                <LoadingBox></LoadingBox>\n            ) : error? (\n                <MessageBox variant=\"danger\">{error}</MessageBox>\n            ) : props.element === \"CarouselByTag\"? (\n            <Carousel responsive={responsive}>\n            {products.map(product => {\n                if(product.tag === props.productTag) \n                    return (\n                        <ProductCardCarousel \n                        key={product._id} product={product}/>\n                    )\n                }\n            )}\n            </Carousel>\n            ) : (\n                <Carousel responsive={responsive}>\n            {products.map(product => {\n                if(product.category === props.productCategory) {\n                    if(product._id !== props.productId)\n                    return (\n                        <ProductCardCarousel \n                        key={product._id} product={product}/>\n                    )\n                }\n            })}\n            </Carousel> \n            )}\n        </Col>\n    )\n}\n\nexport default ProductCarousel;","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/components/PrivateRoute.js",[],["482","483"],"/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/reducers/recommendedCategoryReducers.js",[],"/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/constants/userConstants.js",[],"/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/constants/advertisingBoxConstants.js",[],"/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/actions/recommendedCategoryActions.js",["484"],"import Axios from 'axios';\nimport {   RECOMMENDED_CATEGORY_CREATE_FAIL,\n    RECOMMENDED_CATEGORY_CREATE_REQUEST,\n    RECOMMENDED_CATEGORY_CREATE_SUCCESS,\n    RECOMMENDED_CATEGORY_DETAILS_FAIL,\n    RECOMMENDED_CATEGORY_DETAILS_REQUEST,\n    RECOMMENDED_CATEGORY_DETAILS_SUCCESS,\n    RECOMMENDED_CATEGORY_LIST_FAIL,\n    RECOMMENDED_CATEGORY_LIST_REQUEST,\n    RECOMMENDED_CATEGORY_LIST_SUCCESS,\n    RECOMMENDED_CATEGORY_UPDATE_REQUEST,\n    RECOMMENDED_CATEGORY_UPDATE_SUCCESS,\n    RECOMMENDED_CATEGORY_UPDATE_FAIL,\n    RECOMMENDED_CATEGORY_DELETE_REQUEST,\n    RECOMMENDED_CATEGORY_DELETE_FAIL,\n    RECOMMENDED_CATEGORY_DELETE_SUCCESS, } from '../constants/recommendedCategoryConstants';\n\nexport const listRecommendedCategories = () => async (dispatch) => {\n    dispatch({ type: RECOMMENDED_CATEGORY_LIST_REQUEST });\n    try {\n        const { data } = await Axios.get(\"/api/recommendedcategories\");\n        dispatch({ type: RECOMMENDED_CATEGORY_LIST_SUCCESS, payload: data })\n    }\n    catch (error) {\n        dispatch({ type: RECOMMENDED_CATEGORY_LIST_FAIL, payload: error.message })\n    }\n}\n\nexport const detailsRecommendedCategory = (recommendedCategoryId) => async (dispatch) => {\n    dispatch({ type: RECOMMENDED_CATEGORY_DETAILS_REQUEST, payload: recommendedCategoryId });\n    try {\n      const { data } = await Axios.get(`/api/recommendedcategories/${recommendedCategoryId}`);\n      dispatch({ type: RECOMMENDED_CATEGORY_DETAILS_SUCCESS, payload: data });\n    } catch (error) {\n      dispatch({\n        type: RECOMMENDED_CATEGORY_DETAILS_FAIL,\n        payload:\n          error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n      });\n    }\n  };\n\n  export const createRecommendedCategory = () => async (dispatch, getState) => {\n    dispatch({ type: RECOMMENDED_CATEGORY_CREATE_REQUEST });\n    const {\n      userSignin: { userInfo },\n    } = getState();\n    try {\n      const { data } = await Axios.post(\n        '/api/recommendedcategories',\n        {},\n        {\n          headers: { Authorization: `Bearer ${userInfo.token}` },\n        }\n      );\n      dispatch({\n        type: RECOMMENDED_CATEGORY_CREATE_SUCCESS,\n        payload: data.recommendedCategory,\n      });\n    } catch (error) {\n      const message =\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message;\n      dispatch({ type: RECOMMENDED_CATEGORY_CREATE_FAIL, payload: message });\n    }\n  };\n\n  export const updateRecommendedCategory = (recommendedCategory) => async (dispatch, getState) => {\n    dispatch({ type: RECOMMENDED_CATEGORY_UPDATE_REQUEST, payload: recommendedCategory });\n    const {\n      userSignin: { userInfo },\n    } = getState();\n    try {\n      const { data } = await Axios.put(`/api/recommendedcategories/${recommendedCategory._id}`, recommendedCategory, {\n        headers: { Authorization: `Bearer ${userInfo.token}` },\n      });\n      dispatch({ type: RECOMMENDED_CATEGORY_UPDATE_SUCCESS, payload: data });\n    } catch (error) {\n      const message =\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message;\n      dispatch({ type: RECOMMENDED_CATEGORY_UPDATE_FAIL, error: message });\n    }\n  };\n\n  export const deleteRecommendedCategory = (recommendedCategoryId) => async (dispatch, getState) => {\n    dispatch({ type: RECOMMENDED_CATEGORY_DELETE_REQUEST, payload: recommendedCategoryId });\n    const {\n      userSignin: { userInfo },\n    } = getState();\n    try {\n      const { data } = Axios.delete(`/api/recommendedcategories/${recommendedCategoryId}`, {\n        headers: { Authorization: `Bearer ${userInfo.token}` },\n      });\n      dispatch({ type: RECOMMENDED_CATEGORY_DELETE_SUCCESS });\n    } catch (error) {\n      const message =\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message;\n      dispatch({ type: RECOMMENDED_CATEGORY_DELETE_FAIL, payload: message });\n    }\n  };\n","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/reducers/bannerReducers.js",[],"/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/actions/bannerActions.js",["485"],"import Axios from 'axios';\nimport {   BANNER_CREATE_FAIL,\n    BANNER_CREATE_REQUEST,\n    BANNER_CREATE_SUCCESS,\n    BANNER_DETAILS_FAIL,\n    BANNER_DETAILS_REQUEST,\n    BANNER_DETAILS_SUCCESS,\n    BANNER_LIST_FAIL,\n    BANNER_LIST_REQUEST,\n    BANNER_LIST_SUCCESS,\n    BANNER_UPDATE_REQUEST,\n    BANNER_UPDATE_SUCCESS,\n    BANNER_UPDATE_FAIL,\n    BANNER_DELETE_REQUEST,\n    BANNER_DELETE_FAIL,\n    BANNER_DELETE_SUCCESS, } from '../constants/bannerConstants';\n\nexport const listBanners = () => async (dispatch) => {\n    dispatch({ type: BANNER_LIST_REQUEST });\n    try {\n        const { data } = await Axios.get(\"/api/banners\");\n        dispatch({ type: BANNER_LIST_SUCCESS, payload: data })\n    }\n    catch (error) {\n        dispatch({ type: BANNER_LIST_FAIL, payload: error.message })\n    }\n}\n\nexport const detailsBanner = (bannerId) => async (dispatch) => {\n    dispatch({ type: BANNER_DETAILS_REQUEST, payload: bannerId });\n    try {\n      const { data } = await Axios.get(`/api/banners/${bannerId}`);\n      dispatch({ type: BANNER_DETAILS_SUCCESS, payload: data });\n    } catch (error) {\n      dispatch({\n        type: BANNER_DETAILS_FAIL,\n        payload:\n          error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n      });\n    }\n  };\n\n  export const createBanner = () => async (dispatch, getState) => {\n    dispatch({ type: BANNER_CREATE_REQUEST });\n    const {\n      userSignin: { userInfo },\n    } = getState();\n    try {\n      const { data } = await Axios.post(\n        '/api/banners',\n        {},\n        {\n          headers: { Authorization: `Bearer ${userInfo.token}` },\n        }\n      );\n      dispatch({\n        type: BANNER_CREATE_SUCCESS,\n        payload: data.banner,\n      });\n    } catch (error) {\n      const message =\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message;\n      dispatch({ type: BANNER_CREATE_FAIL, payload: message });\n    }\n  };\n\n  export const updateBanner = (banner) => async (dispatch, getState) => {\n    dispatch({ type: BANNER_UPDATE_REQUEST, payload: banner });\n    const {\n      userSignin: { userInfo },\n    } = getState();\n    try {\n      const { data } = await Axios.put(`/api/banners/${banner._id}`, banner, {\n        headers: { Authorization: `Bearer ${userInfo.token}` },\n      });\n      dispatch({ type: BANNER_UPDATE_SUCCESS, payload: data });\n    } catch (error) {\n      const message =\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message;\n      dispatch({ type: BANNER_UPDATE_FAIL, error: message });\n    }\n  };\n\n  export const deleteBanner = (bannerId) => async (dispatch, getState) => {\n    dispatch({ type: BANNER_DELETE_REQUEST, payload: bannerId });\n    const {\n      userSignin: { userInfo },\n    } = getState();\n    try {\n      const { data } = Axios.delete(`/api/banners/${bannerId}`, {\n        headers: { Authorization: `Bearer ${userInfo.token}` },\n      });\n      dispatch({ type: BANNER_DELETE_SUCCESS });\n    } catch (error) {\n      const message =\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message;\n      dispatch({ type: BANNER_DELETE_FAIL, payload: message });\n    }\n  };",["486","487"],"/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/components/SideBar.js",[],"/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/components/MessageBox.js",[],"/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/constants/productConstants.js",[],"/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/components/ProductDescription.js",[],"/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/components/Banner.js",[],"/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/components/Newsletter.js",["488","489"],"import React, { useState, useEffect, Fragment } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { NEWSLETTER_CREATE_RESET } from '../constants/newsletterConstants';\n\nimport CustomedButton from './UI/CustomedButton';\nimport { createNewsletter } from '../actions/newsletterActions';\n\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\n\n\nconst Newsletter = (props) => {\n\n    const [email, setEmail] = useState('');\n    const [confirm, setConfirm] = useState(false);\n\n    const newsletterCreate = useSelector((state) => state.newsletterCreate);\n    const {\n        loading: loadingCreate,\n        error: errorCreate,\n        success: successCreate,\n        newsletter: createdNewsletter,\n      } = newsletterCreate;\n\n    const dispatch = useDispatch();\n\n        useEffect(() => {\n        if (successCreate) {\n            dispatch({ type: NEWSLETTER_CREATE_RESET });\n        }\n    }, [dispatch, successCreate, props.history, createdNewsletter]);\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        if (!confirm) {\n          alert('You must accept privacy policy');\n        } else {\n          dispatch(createNewsletter(email));\n          setEmail(\"\");\n        }\n      };\n\n    return (\n        <Fragment>\n            <Col className={`newsletter-box ${props.className}`}>\n                <Form onSubmit={submitHandler}>\n                    <h3>NEWSLETTER</h3>\n                    <p>Subscribe to our newsletter to receive our news and promotions.</p>\n                    <Form.Group controlId=\"formBasicEmail\">\n                        <Form.Control \n                        type=\"email\" \n                        placeholder=\"Enter your email address...\"\n                        id=\"email\"\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                        className=\"newsletter-input\"\n                        />\n                        <CustomedButton variant=\"dark\" type=\"submit\" class=\"btn-weight\">\n                            SUBSCRIBE\n                        </CustomedButton>\n                        <Form.Check \n                            type=\"checkbox\" \n                            label=\"I have read and accept the privacy policy.\" \n                            id=\"confirm\" \n                            value={confirm} \n                            onChange={(e) => setConfirm(e.target.value)}\n                            />\n                    </Form.Group>\n                </Form>\n            </Col>\n    </Fragment>\n    )\n}\n\nexport default Newsletter;","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/actions/productActions.js",["490"],"/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/reducers/newsletterReducers.js",[],"/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/actions/newsletterActions.js",["491"],"import Axios from 'axios';\nimport {   NEWSLETTER_CREATE_FAIL,\n    NEWSLETTER_CREATE_REQUEST,\n    NEWSLETTER_CREATE_SUCCESS,\n    NEWSLETTER_DETAILS_FAIL,\n    NEWSLETTER_DETAILS_REQUEST,\n    NEWSLETTER_DETAILS_SUCCESS,\n    NEWSLETTER_LIST_FAIL,\n    NEWSLETTER_LIST_REQUEST,\n    NEWSLETTER_LIST_SUCCESS,\n    NEWSLETTER_DELETE_REQUEST,\n    NEWSLETTER_DELETE_FAIL,\n    NEWSLETTER_DELETE_SUCCESS, } from '../constants/newsletterConstants';\n\nexport const listNewsletters = () => async (dispatch, getState) => {\n    dispatch({ type: NEWSLETTER_LIST_REQUEST });\n    try {\n      const {\n        userSignin: { userInfo },\n      } = getState();\n        const { data } = await Axios.get(\"/api/newsletters\", {\n          headers: {\n            Authorization: `Bearer ${userInfo.token}`,\n          },\n        });\n        dispatch({ type: NEWSLETTER_LIST_SUCCESS, payload: data })\n    }\n    catch (error) {\n        dispatch({ type: NEWSLETTER_LIST_FAIL, payload: error.message })\n    }\n}\n\nexport const detailsNewsletter = (newsletterId) => async (dispatch, getState) => {\n    dispatch({ type: NEWSLETTER_DETAILS_REQUEST, payload: newsletterId });\n    try {\n      const {\n        userSignin: { userInfo },\n      } = getState();\n      const { data } = await Axios.get(`/api/newsletters/${newsletterId}`, {\n        headers: {\n          Authorization: `Bearer ${userInfo.token}`,\n        },\n      });\n      dispatch({ type: NEWSLETTER_DETAILS_SUCCESS, payload: data });\n    } catch (error) {\n      dispatch({\n        type: NEWSLETTER_DETAILS_FAIL,\n        payload:\n          error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n      });\n    }\n  };\n\n  export const createNewsletter = (email) => async (dispatch, getState) => {\n    dispatch({ type: NEWSLETTER_CREATE_REQUEST, payload: { email } });\n    try {\n      const { data } = await Axios.post(\n        '/api/newsletters',\n        { email }\n      );\n      dispatch({\n        type: NEWSLETTER_CREATE_SUCCESS,\n        payload: data,\n      });\n    } catch (error) {\n      const message =\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message;\n      dispatch({ type: NEWSLETTER_CREATE_FAIL, payload: message });\n    }\n  };\n\n  export const deleteNewsletter = (newsletterId) => async (dispatch, getState) => {\n    dispatch({ type: NEWSLETTER_DELETE_REQUEST, payload: newsletterId });\n    const {\n      userSignin: { userInfo },\n    } = getState();\n    try {\n      const { data } = Axios.delete(`/api/newsletters/${newsletterId}`, {\n        headers: { Authorization: `Bearer ${userInfo.token}` },\n      });\n      dispatch({ type: NEWSLETTER_DELETE_SUCCESS });\n    } catch (error) {\n      const message =\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message;\n      dispatch({ type: NEWSLETTER_DELETE_FAIL, payload: message });\n    }\n  };","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/reducers/cartReducers.js",[],"/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/components/LoadingBox.js",[],"/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/components/UI/Input.js",[],"/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/components/CategoryBox.js",[],"/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/components/Footer.js",[],"/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/components/Navigation/BottomNavbar.js",[],"/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/constants/bannerConstants.js",[],["492","493"],"/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/actions/coverActions.js",["494"],"/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/components/Navigation/SearchBox.js",[],"/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/components/Navigation/TopNavbar.js",[],"/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/components/UI/FileUpload.js",[],"/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/components/AdminRoute.js",[],"/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/components/AdvertisingBox.js",[],"/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/components/CheckoutSteps.js",[],"/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/components/ProductDeliveryDetails.js",[],"/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/reducers/infoBoxReducers.js",[],"/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/constants/cartConstants.js",[],["495","496"],"/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/constants/recommendedCategoryConstants.js",[],"/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/actions/userActions.js",[],"/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/reducers/productReducers.js",[],"/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/constants/orderConstants.js",[],["497","498"],"/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/components/AccountDetailsBox.js",[],["499","500"],"/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/components/SettingsBox.js",[],"/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/reducers/boxReducers.js",[],"/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/constants/newsletterConstants.js",[],"/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/components/CoverCarousel.js",[],"/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/actions/orderActions.js",[],"/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/actions/infoBoxActions.js",["501"],"import Axios from 'axios';\nimport {   INFOBOX_CREATE_FAIL,\n    INFOBOX_CREATE_REQUEST,\n    INFOBOX_CREATE_SUCCESS,\n    INFOBOX_DETAILS_FAIL,\n    INFOBOX_DETAILS_REQUEST,\n    INFOBOX_DETAILS_SUCCESS,\n    INFOBOX_LIST_FAIL,\n    INFOBOX_LIST_REQUEST,\n    INFOBOX_LIST_SUCCESS,\n    INFOBOX_UPDATE_REQUEST,\n    INFOBOX_UPDATE_SUCCESS,\n    INFOBOX_UPDATE_FAIL,\n    INFOBOX_DELETE_REQUEST,\n    INFOBOX_DELETE_FAIL,\n    INFOBOX_DELETE_SUCCESS, } from '../constants/infoBoxConstants';\n\nexport const listInfoBoxes = () => async (dispatch) => {\n    dispatch({ type: INFOBOX_LIST_REQUEST });\n    try {\n        const { data } = await Axios.get(\"/api/infoboxes\");\n        dispatch({ type: INFOBOX_LIST_SUCCESS, payload: data })\n    }\n    catch (error) {\n        dispatch({ type: INFOBOX_LIST_FAIL, payload: error.message })\n    }\n}\n\nexport const detailsInfoBox = (infoBoxId) => async (dispatch) => {\n    dispatch({ type: INFOBOX_DETAILS_REQUEST, payload: infoBoxId });\n    try {\n      const { data } = await Axios.get(`/api/infoboxes/${infoBoxId}`);\n      dispatch({ type: INFOBOX_DETAILS_SUCCESS, payload: data });\n    } catch (error) {\n      dispatch({\n        type: INFOBOX_DETAILS_FAIL,\n        payload:\n          error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n      });\n    }\n  };\n\n  export const createInfoBox = () => async (dispatch, getState) => {\n    dispatch({ type: INFOBOX_CREATE_REQUEST });\n    const {\n      userSignin: { userInfo },\n    } = getState();\n    try {\n      const { data } = await Axios.post(\n        '/api/infoboxes',\n        {},\n        {\n          headers: { Authorization: `Bearer ${userInfo.token}` },\n        }\n      );\n      dispatch({\n        type: INFOBOX_CREATE_SUCCESS,\n        payload: data.infoBox,\n      });\n    } catch (error) {\n      const message =\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message;\n      dispatch({ type: INFOBOX_CREATE_FAIL, payload: message });\n    }\n  };\n\n  export const updateInfoBox = (infoBox) => async (dispatch, getState) => {\n    dispatch({ type: INFOBOX_UPDATE_REQUEST, payload: infoBox });\n    const {\n      userSignin: { userInfo },\n    } = getState();\n    try {\n      const { data } = await Axios.put(`/api/infoboxes/${infoBox._id}`, infoBox, {\n        headers: { Authorization: `Bearer ${userInfo.token}` },\n      });\n      dispatch({ type: INFOBOX_UPDATE_SUCCESS, payload: data });\n    } catch (error) {\n      const message =\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message;\n      dispatch({ type: INFOBOX_UPDATE_FAIL, error: message });\n    }\n  };\n\n  export const deleteInfoBox = (infoBoxId) => async (dispatch, getState) => {\n    dispatch({ type: INFOBOX_DELETE_REQUEST, payload: infoBoxId });\n    const {\n      userSignin: { userInfo },\n    } = getState();\n    try {\n      const { data } = Axios.delete(`/api/infoboxes/${infoBoxId}`, {\n        headers: { Authorization: `Bearer ${userInfo.token}` },\n      });\n      dispatch({ type: INFOBOX_DELETE_SUCCESS });\n    } catch (error) {\n      const message =\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message;\n      dispatch({ type: INFOBOX_DELETE_FAIL, payload: message });\n    }\n  };","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/containers/Screens/PaymentMethodScreen.js",[],"/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/containers/Screens/ProductScreen.js",[],"/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/containers/Screens/SearchScreen.js",["502"],"/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/containers/Screens/RecommendedCategoryEditScreen.js",["503","504"],"import React, { useEffect, useState, Fragment } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Axios from 'axios';\n\nimport { detailsRecommendedCategory, updateRecommendedCategory } from '../../actions/recommendedCategoryActions';\nimport { RECOMMENDED_CATEGORY_UPDATE_RESET } from '../../constants/recommendedCategoryConstants';\nimport LoadingBox from '../../components/LoadingBox';\nimport MessageBox from '../../components/MessageBox';\nimport CustomedButton from '../../components/UI/CustomedButton';\n\nimport Col from 'react-bootstrap/esm/Col';\nimport Row from 'react-bootstrap/Row';\nimport Form from 'react-bootstrap/Form';\nimport Input from '../../components/UI/Input';\nimport Container from 'react-bootstrap/esm/Container';\n\n\nconst RecommendedCategoryEditScreen = (props) => {\n\n  const recommendedCategoryId = props.match.params.id;\n  const [name, setName] = useState('');\n  const [link, setLink] = useState('');\n  const [image, setImage] = useState('');\n\n  const recommendedCategoryDetails = useSelector((state) => state.recommendedCategoryDetails);\n  const { loading, error, recommendedCategory } = recommendedCategoryDetails;\n\n  const recommendedCategoryUpdate = useSelector((state) => state.recommendedCategoryUpdate);\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate,\n  } = recommendedCategoryUpdate;\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (successUpdate) {\n      props.history.push('/settings/recommendedcategory');\n    }\n    if (!recommendedCategory || recommendedCategory._id !== recommendedCategoryId || successUpdate) {\n      dispatch({ type: RECOMMENDED_CATEGORY_UPDATE_RESET });\n      dispatch(detailsRecommendedCategory(recommendedCategoryId));\n    } else {\n      setName(recommendedCategory.name);\n      setLink(recommendedCategory.link);\n      setImage(recommendedCategory.image);\n    }\n  }, [recommendedCategory, dispatch, recommendedCategoryId, props.history, successUpdate]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(\n      updateRecommendedCategory({\n        _id: recommendedCategoryId,\n        name,\n        link,\n        image,\n      })\n    );\n  };\n\n  const [loadingUpload, setLoadingUpload] = useState(false);\n  const [errorUpload, setErrorUpload] = useState('');\n\n  const userSignin = useSelector((state) => state.userSignin);\n  const { userInfo } = userSignin;\n\n  const uploadFileHandler = async (e) => {\n    const file = e.target.files[0];\n    const bodyFormData = new FormData();\n    bodyFormData.append('image', file);\n    setLoadingUpload(true);\n    try {\n      const { data } = await Axios.post('/api/uploads', bodyFormData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n          Authorization: `Bearer ${userInfo.token}`,\n        },\n      });\n      setImage(data);\n      setLoadingUpload(false);\n    } catch (error) {\n      setErrorUpload(error.message);\n      setLoadingUpload(false);\n    }\n  };\n\n  return (\n    <Container>\n      <Row>\n        <Col lg={12} md={12} sm={12} xs={12}>\n          <Row className=\"breadcumber\">\n            <h6 className=\"breadcumber-box\"><Link to=\"/\">Home</Link></h6>\n            <h6 className=\"breadcumber-box\"><Link to=\"/settings\">Settings</Link></h6>\n            <h6 className=\"breadcumber-box\"><Link to=\"/settings/recommendedcategorylist\">Recommended Categories List</Link></h6>\n            <h6 className=\"breadcumber-box\"><Link>Edit Recommended Category</Link></h6>\n          </Row>\n        </Col>\n      </Row>\n      <Form className=\"form-screens\" onSubmit={submitHandler}>\n        <Col>\n          <h2>Edit Recommended Category</h2>\n        </Col>\n        {loadingUpdate && <LoadingBox></LoadingBox>}\n        {errorUpdate && <MessageBox variant=\"danger\">{errorUpdate}</MessageBox>}\n        {loading ? (\n          <LoadingBox></LoadingBox>\n        ) : error ? (\n          <MessageBox variant=\"danger\">{error}</MessageBox>\n        ) : (\n              <Fragment>\n                <Col>\n                  <Input\n                    element=\"input\"\n                    type=\"text\"\n                    id=\"name\"\n                    placeholder=\"Enter name\"\n                    value={name}\n                    onChange={(e) => setName(e.target.value)}\n                    label=\"Name\"\n                  ></Input>\n                </Col>\n                <Col>\n                  <Input\n                    element=\"input\"\n                    type=\"text\"\n                    id=\"link\"\n                    placeholder=\"Enter link\"\n                    value={link}\n                    onChange={(e) => setLink(e.target.value)}\n                    label=\"Link\"\n                  ></Input>\n                </Col>\n                <Col>\n                  <Input\n                    element=\"input\"\n                    type=\"text\"\n                    id=\"image\"\n                    placeholder=\"Enter image\"\n                    value={image}\n                    onChange={(e) => setImage(e.target.value)}\n                    label=\"Image\"\n                  ></Input>\n                </Col>\n                <Col>\n                  <Form.Group>\n                    <Form.File\n                      type=\"file\"\n                      id=\"imageFile\"\n                      label=\"Image file\"\n                      onChange={uploadFileHandler} />\n                  </Form.Group>\n                </Col>\n                <Col>\n                  <CustomedButton\n                    type=\"submit\"\n                    class=\"full-width margin-top btn-weight\"\n                    variant=\"dark\"\n                  >\n                    Update\n                </CustomedButton>\n                </Col>\n                <Col>\n                  {loadingUpdate && <LoadingBox></LoadingBox>}\n                  {errorUpdate && (\n                    <MessageBox variant=\"danger\">{errorUpdate}</MessageBox>\n                  )}\n                  {successUpdate && (\n                    <MessageBox variant=\"success margin-top\">\n                      Updated\n                    </MessageBox>\n                  )}\n                </Col>\n              </Fragment>\n            )}\n      </Form>\n    </Container>\n  )\n}\n\nexport default RecommendedCategoryEditScreen;","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/containers/Screens/InfoBoxListScreen.js",[],"/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/containers/Screens/PrivacyPolicyScreen.js",[],"/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/containers/Screens/AccountDetailsScreen.js",[],"/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/containers/Screens/AdvertisingBoxEditScreen.js",["505","506"],"import React, { useEffect, useState, Fragment } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Axios from 'axios';\n\nimport { COVER_UPDATE_RESET } from '../../constants/coverConstants';\nimport { detailsAdvertisingBox, updateAdvertisingBox } from '../../actions/advertisingBoxActions';\nimport CustomedButton from '../../components/UI/CustomedButton';\nimport Input from '../../components/UI/Input';\nimport LoadingBox from '../../components/LoadingBox';\nimport MessageBox from '../../components/MessageBox';\n\nimport Col from 'react-bootstrap/esm/Col';\nimport Row from 'react-bootstrap/Row';\nimport Form from 'react-bootstrap/Form';\nimport Container from 'react-bootstrap/esm/Container';\n\n\nconst AdvertisingBoxEditScreen = (props) => {\n\n    const advertisingBoxId = props.match.params.id;\n    const [name, setName] = useState('');\n    const [link, setLink] = useState('');\n    const [image, setImage] = useState('');\n\n    const advertisingBoxDetails = useSelector((state) => state.advertisingBoxDetails);\n    const { loading, error, advertisingBox } = advertisingBoxDetails;\n\n    const advertisingBoxUpdate = useSelector((state) => state.advertisingBoxUpdate);\n    const {\n      loading: loadingUpdate,\n      error: errorUpdate,\n      success: successUpdate,\n    } = advertisingBoxUpdate;\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        if (successUpdate) {\n          props.history.push('/settings/advertisingboxlist');\n        }\n        if (!advertisingBox || advertisingBox._id !== advertisingBoxId || successUpdate) {\n          dispatch({ type: COVER_UPDATE_RESET });\n          dispatch(detailsAdvertisingBox(advertisingBoxId));\n        } else {\n          setName(advertisingBox.name);\n          setLink(advertisingBox.link);\n          setImage(advertisingBox.image);\n        }\n      }, [successUpdate, advertisingBox, dispatch, advertisingBoxId, props.history]);\n\n      const submitHandler = (e) => {\n        e.preventDefault();\n        dispatch(\n          updateAdvertisingBox({\n            _id: advertisingBoxId,\n            name,\n            link,\n            image,\n          })\n        );\n      };\n\n      const [loadingUpload, setLoadingUpload] = useState(false);\n      const [errorUpload, setErrorUpload] = useState('');\n    \n      const userSignin = useSelector((state) => state.userSignin);\n      const { userInfo } = userSignin;\n\n      const uploadFileHandler = async (e) => {\n        const file = e.target.files[0];\n        const bodyFormData = new FormData();\n        bodyFormData.append('image', file);\n        setLoadingUpload(true);\n        try {\n          const { data } = await Axios.post('/api/uploads', bodyFormData, {\n            headers: {\n              'Content-Type': 'multipart/form-data',\n              Authorization: `Bearer ${userInfo.token}`,\n            },\n          });\n          setImage(data);\n          setLoadingUpload(false);\n        } catch (error) {\n          setErrorUpload(error.message);\n          setLoadingUpload(false);\n        }\n      };\n\n    return (\n      <Container>\n            <Row>\n        <Col lg={12} md={12} sm={12} xs={12}>\n          <Row className=\"breadcumber\">\n            <h6 className=\"breadcumber-box\"><Link to=\"/\">Home</Link></h6>\n            <h6 className=\"breadcumber-box\"><Link to=\"/settings\">Settings</Link></h6>\n            <h6 className=\"breadcumber-box\"><Link to=\"/settings/advertisingboxlist\">Advertising Box List</Link></h6>\n            <h6 className=\"breadcumber-box\"><Link>Edit Advertising Box</Link></h6>\n          </Row>\n        </Col>\n      </Row>\n        <Form className=\"form-screens\" onSubmit={submitHandler}>\n            <Col>\n                <h2>Edit Advertising Box</h2>\n            </Col>\n            {loadingUpdate && <LoadingBox></LoadingBox>}\n                {errorUpdate && <MessageBox variant=\"danger\">{errorUpdate}</MessageBox>}\n                {loading ? (\n                <LoadingBox></LoadingBox>\n                ) : error ? (\n                <MessageBox variant=\"danger\">{error}</MessageBox>\n                ) : (\n            <Fragment>\n            <Col>\n                <Input\n                element=\"input\"\n                type=\"text\"\n                id=\"name\"\n                placeholder=\"Enter name\"\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n                label=\"Name\"\n            ></Input>\n            </Col>\n            <Col>\n                <Input\n                element=\"input\"\n                type=\"text\"\n                id=\"link\"\n                placeholder=\"Enter link\"\n                value={link}\n                onChange={(e) => setLink(e.target.value)}\n                label=\"Link\"\n            ></Input>\n            </Col>\n            <Col>\n            <Input\n                element=\"input\"\n                type=\"text\"\n                id=\"image\"\n                placeholder=\"Enter image\"\n                value={image}\n                onChange={(e) => setImage(e.target.value)}\n                label=\"Image\"\n            ></Input>\n            </Col>\n            <Col>\n            <Form.Group>\n                <Form.File \n                    type=\"file\"\n                    id=\"imageFile\" \n                    label=\"Image file\"\n                    onChange={uploadFileHandler} />\n                </Form.Group>\n            </Col>\n            <Col>\n                <CustomedButton\n                    type=\"submit\"\n                    class=\"full-width margin-top btn-weight\"\n                    variant=\"dark\"\n                >\n                    Update\n                </CustomedButton>\n            </Col>\n            <Col>\n                    {loadingUpdate && <LoadingBox></LoadingBox>}\n                        {errorUpdate && (\n                        <MessageBox variant=\"danger\">{errorUpdate}</MessageBox>\n                        )}\n                        {successUpdate && (\n                        <MessageBox variant=\"success margin-top\">\n                            Updated\n                        </MessageBox>\n                    )}\n                </Col>\n            </Fragment>\n            )}\n        </Form>\n        </Container>\n    )\n}\n\nexport default AdvertisingBoxEditScreen;","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/containers/Screens/AdvertisingBoxListScreen.js",[],"/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/containers/Screens/BannerEditScreen.js",["507","508"],"import React, { useEffect, useState, Fragment } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Axios from 'axios';\n\nimport LoadingBox from '../../components/LoadingBox';\nimport MessageBox from '../../components/MessageBox';\nimport Input from '../../components/UI/Input';\nimport CustomedButton from '../../components/UI/CustomedButton';\nimport { BANNER_UPDATE_RESET } from '../../constants/bannerConstants';\nimport { detailsBanner, updateBanner } from '../../actions/bannerActions';\n\nimport Col from 'react-bootstrap/esm/Col';\nimport Row from 'react-bootstrap/Row';\nimport Form from 'react-bootstrap/Form';\nimport Container from 'react-bootstrap/esm/Container';\n\n\nconst BannerEditScreen = (props) => {\n\n    const bannerId = props.match.params.id;\n    const [name, setName] = useState('');\n    const [category, setCategory] = useState('');\n    const [subcategory, setSubcategory] = useState('');\n    const [link, setLink] = useState('');\n    const [image, setImage] = useState('');\n\n    const bannerDetails = useSelector((state) => state.bannerDetails);\n    const { loading, error, banner } = bannerDetails;\n\n    const bannerUpdate = useSelector((state) => state.bannerUpdate);\n    const {\n      loading: loadingUpdate,\n      error: errorUpdate,\n      success: successUpdate,\n    } = bannerUpdate;\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        if (successUpdate) {\n          props.history.push('/settings/bannerlist');\n        }\n        if (!banner || banner._id !== bannerId || successUpdate) {\n          dispatch({ type: BANNER_UPDATE_RESET });\n          dispatch(detailsBanner(bannerId));\n        } else {\n          setName(banner.name);\n          setCategory(banner.category);\n          setSubcategory(banner.subcategory);\n          setLink(banner.link);\n          setImage(banner.image);\n        }\n      }, [banner, dispatch, bannerId, props.history, successUpdate]);\n\n      const submitHandler = (e) => {\n        e.preventDefault();\n        dispatch(\n          updateBanner({\n            _id: bannerId,\n            name,\n            category,\n            subcategory,\n            link,\n            image,\n          })\n        );\n      };\n\n      const [loadingUpload, setLoadingUpload] = useState(false);\n      const [errorUpload, setErrorUpload] = useState('');\n    \n      const userSignin = useSelector((state) => state.userSignin);\n      const { userInfo } = userSignin;\n\n      const uploadFileHandler = async (e) => {\n        const file = e.target.files[0];\n        const bodyFormData = new FormData();\n        bodyFormData.append('image', file);\n        setLoadingUpload(true);\n        try {\n          const { data } = await Axios.post('/api/uploads', bodyFormData, {\n            headers: {\n              'Content-Type': 'multipart/form-data',\n              Authorization: `Bearer ${userInfo.token}`,\n            },\n          });\n          setImage(data);\n          setLoadingUpload(false);\n        } catch (error) {\n          setErrorUpload(error.message);\n          setLoadingUpload(false);\n        }\n      };\n\n    return (\n      <Container>\n            <Row>\n        <Col lg={12} md={12} sm={12} xs={12}>\n          <Row className=\"breadcumber\">\n            <h6 className=\"breadcumber-box\"><Link to=\"/\">Home</Link></h6>\n            <h6 className=\"breadcumber-box\"><Link to=\"/settings\">Settings</Link></h6>\n            <h6 className=\"breadcumber-box\"><Link to=\"/settings/bannerlist\">Banner List</Link></h6>\n            <h6 className=\"breadcumber-box\"><Link>Edit Banner</Link></h6>\n          </Row>\n        </Col>\n      </Row>\n        <Form className=\"form-screens\" onSubmit={submitHandler}>\n            <Col>\n                <h2>Edit Banner</h2>\n            </Col>\n            {loadingUpdate && <LoadingBox></LoadingBox>}\n                {errorUpdate && <MessageBox variant=\"danger\">{errorUpdate}</MessageBox>}\n                {loading ? (\n                <LoadingBox></LoadingBox>\n                ) : error ? (\n                <MessageBox variant=\"danger\">{error}</MessageBox>\n                ) : (\n            <Fragment>\n            <Col>\n                <Input\n                element=\"input\"\n                type=\"text\"\n                id=\"name\"\n                placeholder=\"Enter name\"\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n                label=\"Name\"\n            ></Input>\n            </Col>\n            <Col>\n                <Input\n                element=\"input\"\n                type=\"text\"\n                id=\"category\"\n                placeholder=\"Enter category\"\n                value={category}\n                onChange={(e) => setCategory(e.target.value)}\n                label=\"Category\"\n            ></Input>\n            </Col>\n            <Col>\n                <Input\n                element=\"input\"\n                type=\"text\"\n                id=\"subcategory\"\n                placeholder=\"Enter subcategory\"\n                value={subcategory}\n                onChange={(e) => setSubcategory(e.target.value)}\n                label=\"Subcategory\"\n            ></Input>\n            </Col>\n            <Col>\n                <Input\n                element=\"input\"\n                type=\"text\"\n                id=\"link\"\n                placeholder=\"Enter link\"\n                value={link}\n                onChange={(e) => setLink(e.target.value)}\n                label=\"Link\"\n            ></Input>\n            </Col>\n            <Col>\n            <Input\n                element=\"input\"\n                type=\"text\"\n                id=\"image\"\n                placeholder=\"Enter image\"\n                value={image}\n                onChange={(e) => setImage(e.target.value)}\n                label=\"Image\"\n            ></Input>\n            </Col>\n            <Col>\n            <Form.Group>\n                <Form.File \n                    type=\"file\"\n                    id=\"imageFile\" \n                    label=\"Image file\"\n                    onChange={uploadFileHandler} />\n                </Form.Group>\n            </Col>\n            <Col>\n                <CustomedButton\n                    type=\"submit\"\n                    class=\"full-width margin-top btn-weight\"\n                    variant=\"dark\"\n                >\n                    Update\n                </CustomedButton>\n            </Col>\n            <Col>\n                    {loadingUpdate && <LoadingBox></LoadingBox>}\n                        {errorUpdate && (\n                        <MessageBox variant=\"danger\">{errorUpdate}</MessageBox>\n                        )}\n                        {successUpdate && (\n                        <MessageBox variant=\"success margin-top\">\n                            Updated\n                        </MessageBox>\n                    )}\n                </Col>\n            </Fragment>\n            )}\n        </Form>\n        </Container>\n    )\n}\n\nexport default BannerEditScreen;","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/containers/Screens/BannerListScreen.js",[],"/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/containers/Screens/CartScreen.js",[],"/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/containers/Screens/CategoryScreen.js",["509","510"],"import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams, Link } from 'react-router-dom';\n\nimport Newsletter from '../../components/Newsletter';\nimport ProductCard from '../../components/ProductCart';\nimport Banner from '../../components/Banner';\nimport InfoBox from '../../components/InfoBox';\nimport LoadingBox from '../../components/LoadingBox';\nimport MessageBox from '../../components/MessageBox';\nimport { listProductBrands, listProductCategories, listProducts } from '../../actions/productActions';\nimport { listInfoBoxes } from '../../actions/infoBoxActions';\nimport { listBanners } from '../../actions/bannerActions';\n\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form'\nimport { Fragment } from 'react';\n\n\nconst CategoryScreen = (props) => {\n\n    const categoryId = props.match.params.category;\n\n    const {\n        name = 'all',\n        category = 'all',\n        brand = 'all',\n        min = 0,\n        max = 0,\n        order = 'newest',\n    } = useParams();\n\n    const infoBoxList = useSelector(state => state.infoBoxList);\n    const { loading: loadingInfoBox, error: errorInfoBox, infoBoxes } = infoBoxList;\n\n    const productList = useSelector(state => state.productList);\n    const { loading, error, products } = productList;\n\n    const bannerList = useSelector(state => state.bannerList);\n    const { loading: loadingBanner, error: errorBanner, banners } = bannerList;\n\n    const productCategoryList = useSelector((state) => state.productCategoryList);\n    const { loading: loadingCategories, error: errorCategories, categories } = productCategoryList;\n\n    const productBrandList = useSelector((state) => state.productBrandList);\n    const { loading: loadingBrands, error: errorBrands, brands } = productBrandList;\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(listInfoBoxes());\n    }, [dispatch]);\n\n    useEffect(() => {\n        dispatch(listBanners());\n    }, [dispatch]);\n\n    useEffect(() => {\n        dispatch(listProductCategories());\n    }, [dispatch]);\n\n    useEffect(() => {\n        dispatch(listProductBrands());\n    }, [dispatch]);\n\n    useEffect(() => {\n        dispatch(\n            listProducts({\n                name: name !== 'all' ? name : '',\n                category: category !== 'all' ? category : '',\n                brand: brand !== 'all' ? brand : '',\n                min,\n                max,\n                order,\n            })\n        );\n    }, [category, dispatch, max, min, name, order, brand]);\n\n    const getFilterUrl = (filter) => {\n        const filterCategory = filter.category || category;\n        const filterBrand = filter.brand || brand;\n        const filterName = filter.name || name;\n        const sortOrder = filter.order || order;\n        const filterMin = filter.min ? filter.min : filter.min === 0 ? 0 : min;\n        const filterMax = filter.max ? filter.max : filter.max === 0 ? 0 : max;\n        return `/search/category/${filterCategory}/brand/${filterBrand}/name/${filterName}/min/${filterMin}/max/${filterMax}/order/${sortOrder}`;\n    };\n\n    return (\n        <Container>\n            <Row>\n                <Col lg={3}>\n                    <Row>\n                        <Col lg={12} md={12} sm={12} xs={12}>\n                        </Col>\n                    </Row>\n\n                </Col>\n                <Col lg={9} md={12} sm={12} xs={12}>\n                    <Row className=\"breadcumber\">\n                        <h6 className=\"breadcumber-box\"><Link to=\"/\">Home</Link></h6>\n                        <h6 className=\"breadcumber-box\"><Link to={`/products/${categoryId}`}>{categoryId.charAt(0).toUpperCase() + categoryId.slice(1)}</Link></h6>\n                    </Row>\n                </Col>\n            </Row>\n            <Row>\n                <Col lg={3} md={12}>\n                    {loadingInfoBox ? (\n                        <LoadingBox></LoadingBox>\n                    ) : errorInfoBox ? (\n                        <MessageBox variant=\"danger\">{error}</MessageBox>\n                    ) : (\n                                <Row>\n                                    <Col lg={12} md={4} className=\"search-box\">\n                                        <Form.Control\n                                            id={props.id}\n                                            className=\"search-option\"\n                                            as=\"select\"\n                                            value={order}\n                                            onChange={(e) => {\n                                                props.history.push(getFilterUrl({ order: e.target.value }));\n                                            }}\n                                        >\n                                            <option value=\"newest\">Newest Arrivals</option>\n                                            <option value=\"lowest\">Price: Low to High</option>\n                                            <option value=\"highest\">Price: High to Low</option>\n                                        </Form.Control>\n                                        {loadingCategories ? (\n                                            <LoadingBox></LoadingBox>\n                                        ) : errorCategories ? (\n                                            <MessageBox variant=\"danger\">{errorCategories}</MessageBox>\n                                        ) : (\n                                                    <Form.Control\n                                                        id={props.id}\n                                                        className=\"search-option\"\n                                                        as=\"select\"\n                                                        value={category}\n                                                        onChange={(e) => {\n                                                            props.history.push(getFilterUrl({ category: e.target.value }));\n                                                        }}\n                                                    >\n                                                        <option value=\"all\">Category: All</option>\n                                                        {categories.map((c) => (\n                                                            <option value={c}>{c.charAt(0).toUpperCase() + c.slice(1)}</option>\n                                                        ))}\n                                                    </Form.Control>\n                                                )}\n                                        {loadingBrands ? (\n                                            <LoadingBox></LoadingBox>\n                                        ) : errorBrands ? (\n                                            <MessageBox variant=\"danger\">{errorBrands}</MessageBox>\n                                        ) : (\n                                                    <Form.Control\n                                                        id={props.id}\n                                                        className=\"search-option\"\n                                                        as=\"select\"\n                                                        value={brand}\n                                                        onChange={(e) => {\n                                                            props.history.push(getFilterUrl({ brand: e.target.value }));\n                                                        }}\n                                                    >\n                                                        <option value=\"all\">Brand: All</option>\n                                                        {brands.map((b) => (\n                                                            <option value={b}>{b.charAt(0).toUpperCase() + b.slice(1)}</option>\n                                                        ))}\n                                                    </Form.Control>\n                                                )}\n                                    </Col>\n                                    {infoBoxes.map(infoBox => {\n                                        return (\n                                            <InfoBox key={infoBox._id} infoBox={infoBox} />\n                                        )\n                                    })}\n                                </Row>\n                            )}\n                </Col>\n                {loading ? (\n                    <LoadingBox></LoadingBox>\n                ) : error ? (\n                    <MessageBox variant=\"danger\">{error}</MessageBox>\n                ) : (\n                            <Col lg={9}>\n                                <Row>\n                                    {loadingBanner ? (\n                                        <LoadingBox></LoadingBox>\n                                    ) : errorBanner ? (\n                                        <MessageBox variant=\"danger\">{error}</MessageBox>\n                                    ) : (\n                                                <Fragment>\n                                                    {banners.map(banner => {\n                                                        if (banner.category === categoryId) {\n                                                            return (\n                                                                <Banner className=\"remove-margin-top\" key={banner._id} banner={banner} />\n                                                            )\n                                                        }\n                                                        if (banner.category === 'home') {\n                                                            return (\n                                                                <Banner className=\"remove-margin-top\" key={banner._id} banner={banner} />\n                                                            )\n                                                        }\n                                                    })}\n                                                </Fragment>\n                                            )}\n                                </Row>\n                                <Row>\n                                    {products.map(product => {\n                                        if (product.category === categoryId)\n                                            return (\n                                                <ProductCard\n                                                    key={product._id} product={product} />\n                                            )\n                                    })}\n                                </Row>\n                            </Col>\n                        )}\n            </Row>\n            <Newsletter />\n        </Container>\n\n    )\n}\n\nexport default CategoryScreen;","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/containers/Screens/ConditionOfPurchaseScreen.js",[],"/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/containers/Screens/CoverEditScreen.js",["511","512"],"import React, { useEffect, useState, Fragment } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Axios from 'axios';\n\nimport { COVER_UPDATE_RESET } from '../../constants/coverConstants';\nimport { detailsCover, updateCover } from '../../actions/coverActions';\n\nimport LoadingBox from '../../components/LoadingBox';\nimport MessageBox from '../../components/MessageBox';\nimport Input from '../../components/UI/Input';\nimport CustomedButton from '../../components/UI/CustomedButton';\n\nimport Col from 'react-bootstrap/esm/Col';\nimport Row from 'react-bootstrap/Row';\nimport Form from 'react-bootstrap/Form';\nimport Container from 'react-bootstrap/esm/Container';\n\n\nconst CoverEditScreen = (props) => {\n\n  const coverId = props.match.params.id;\n  const [name, setName] = useState('');\n  const [link, setLink] = useState('');\n  const [image, setImage] = useState('');\n\n  const coverDetails = useSelector((state) => state.coverDetails);\n  const { loading, error, cover } = coverDetails;\n\n  const coverUpdate = useSelector((state) => state.coverUpdate);\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate,\n  } = coverUpdate;\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (successUpdate) {\n      props.history.push('/settings/coverlist');\n    }\n    if (!cover || cover._id !== coverId || successUpdate) {\n      dispatch({ type: COVER_UPDATE_RESET });\n      dispatch(detailsCover(coverId));\n    } else {\n      setName(cover.name);\n      setLink(cover.link);\n      setImage(cover.image);\n    }\n  }, [cover, dispatch, coverId, props.history, successUpdate]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(\n      updateCover({\n        _id: coverId,\n        name,\n        link,\n        image,\n      })\n    );\n  };\n\n  const [loadingUpload, setLoadingUpload] = useState(false);\n  const [errorUpload, setErrorUpload] = useState('');\n\n  const userSignin = useSelector((state) => state.userSignin);\n  const { userInfo } = userSignin;\n\n  const uploadFileHandler = async (e) => {\n    const file = e.target.files[0];\n    const bodyFormData = new FormData();\n    bodyFormData.append('image', file);\n    setLoadingUpload(true);\n    try {\n      const { data } = await Axios.post('/api/uploads', bodyFormData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n          Authorization: `Bearer ${userInfo.token}`,\n        },\n      });\n      setImage(data);\n      setLoadingUpload(false);\n    } catch (error) {\n      setErrorUpload(error.message);\n      setLoadingUpload(false);\n    }\n  };\n\n  return (\n    <Container>\n      <Row>\n        <Col lg={12} md={12} sm={12} xs={12}>\n          <Row className=\"breadcumber\">\n              <h6 className=\"breadcumber-box\"><Link to=\"/\">Home</Link></h6>\n              <h6 className=\"breadcumber-box\"><Link to=\"/settings\">Settings</Link></h6>\n              <h6 className=\"breadcumber-box\"><Link to=\"/settings/coverlist\">Cover List</Link></h6>\n              <h6 className=\"breadcumber-box\"><Link>Edit Cover</Link></h6>\n          </Row>\n        </Col>\n      </Row>\n      <Form className=\"form-screens\" onSubmit={submitHandler}>\n        <Col>\n          <h2>Edit Cover</h2>\n        </Col>\n        {loadingUpdate && <LoadingBox></LoadingBox>}\n        {errorUpdate && <MessageBox variant=\"danger\">{errorUpdate}</MessageBox>}\n        {loading ? (\n          <LoadingBox></LoadingBox>\n        ) : error ? (\n          <MessageBox variant=\"danger\">{error}</MessageBox>\n        ) : (\n              <Fragment>\n                <Col>\n                  <Input\n                    element=\"input\"\n                    type=\"text\"\n                    id=\"name\"\n                    placeholder=\"Enter name\"\n                    value={name}\n                    onChange={(e) => setName(e.target.value)}\n                    label=\"Name\"\n                  ></Input>\n                </Col>\n                <Col>\n                  <Input\n                    element=\"input\"\n                    type=\"text\"\n                    id=\"link\"\n                    placeholder=\"Enter link\"\n                    value={link}\n                    onChange={(e) => setLink(e.target.value)}\n                    label=\"Link\"\n                  ></Input>\n                </Col>\n                <Col>\n                  <Input\n                    element=\"input\"\n                    type=\"text\"\n                    id=\"image\"\n                    placeholder=\"Enter image\"\n                    value={image}\n                    onChange={(e) => setImage(e.target.value)}\n                    label=\"Image\"\n                  ></Input>\n                </Col>\n                <Col>\n                  <Form.Group>\n                    <Form.File\n                      type=\"file\"\n                      id=\"imageFile\"\n                      label=\"Image file\"\n                      onChange={uploadFileHandler} />\n                  </Form.Group>\n                </Col>\n                <Col>\n                  <CustomedButton\n                    type=\"submit\"\n                    class=\"full-width margin-top btn-weight\"\n                    variant=\"dark\"\n                  >\n                    Update\n                </CustomedButton>\n                </Col>\n                <Col>\n                  {loadingUpdate && <LoadingBox></LoadingBox>}\n                  {errorUpdate && (\n                    <MessageBox variant=\"danger\">{errorUpdate}</MessageBox>\n                  )}\n                  {successUpdate && (\n                    <MessageBox variant=\"success margin-top\">\n                      Updated\n                    </MessageBox>\n                  )}\n                </Col>\n              </Fragment>\n            )}\n      </Form>\n    </Container>\n  )\n}\n\nexport default CoverEditScreen;","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/containers/Screens/CoverListScreen.js",[],"/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/containers/Screens/HomeScreen.js",["513"],"/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/containers/Screens/InfoBoxEditScreen.js",["514","515"],"import React, { useEffect, useState, Fragment } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Axios from 'axios';\n\nimport LoadingBox from '../../components/LoadingBox';\nimport MessageBox from '../../components/MessageBox';\nimport Input from '../../components/UI/Input';\nimport CustomedButton from '../../components/UI/CustomedButton';\nimport { INFOBOX_UPDATE_RESET } from '../../constants/infoBoxConstants';\nimport { detailsInfoBox, updateInfoBox } from '../../actions/infoBoxActions';\n\nimport Col from 'react-bootstrap/esm/Col';\nimport Row from 'react-bootstrap/Row';\nimport Form from 'react-bootstrap/Form';\nimport Container from 'react-bootstrap/esm/Container';\n\n\nconst InfoBoxEditScreen = (props) => {\n\n  const infoBoxId = props.match.params.id;\n  const [name, setName] = useState('');\n  const [title, setTitle] = useState('');\n  const [text, setText] = useState('');\n  const [link, setLink] = useState('');\n  const [image, setImage] = useState('');\n\n  const infoBoxDetails = useSelector((state) => state.infoBoxDetails);\n  const { loading, error, infoBox } = infoBoxDetails;\n\n  const infoBoxUpdate = useSelector((state) => state.infoBoxUpdate);\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate,\n  } = infoBoxUpdate;\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (successUpdate) {\n      props.history.push('/settings/infoboxlist');\n    }\n    if (!infoBox || infoBox._id !== infoBoxId || successUpdate) {\n      dispatch({ type: INFOBOX_UPDATE_RESET });\n      dispatch(detailsInfoBox(infoBoxId));\n    } else {\n      setName(infoBox.name);\n      setTitle(infoBox.title);\n      setText(infoBox.text);\n      setLink(infoBox.link);\n      setImage(infoBox.image);\n    }\n  }, [infoBox, dispatch, infoBoxId, props.history, successUpdate]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(\n      updateInfoBox({\n        _id: infoBoxId,\n        name,\n        title,\n        text,\n        link,\n        image,\n      })\n    );\n  };\n\n  const [loadingUpload, setLoadingUpload] = useState(false);\n  const [errorUpload, setErrorUpload] = useState('');\n\n  const userSignin = useSelector((state) => state.userSignin);\n  const { userInfo } = userSignin;\n\n  const uploadFileHandler = async (e) => {\n    const file = e.target.files[0];\n    const bodyFormData = new FormData();\n    bodyFormData.append('image', file);\n    setLoadingUpload(true);\n    try {\n      const { data } = await Axios.post('/api/uploads', bodyFormData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n          Authorization: `Bearer ${userInfo.token}`,\n        },\n      });\n      setImage(data);\n      setLoadingUpload(false);\n    } catch (error) {\n      setErrorUpload(error.message);\n      setLoadingUpload(false);\n    }\n  };\n\n  return (\n    <Container>\n      <Row>\n        <Col lg={12} md={12} sm={12} xs={12}>\n          <Row className=\"breadcumber\">\n            <h6 className=\"breadcumber-box\"><Link to=\"/\">Home</Link></h6>\n            <h6 className=\"breadcumber-box\"><Link to=\"/settings\">Settings</Link></h6>\n            <h6 className=\"breadcumber-box\"><Link to=\"/settings/infoboxlist\">Info Box List</Link></h6>\n            <h6 className=\"breadcumber-box\"><Link>Edit Info Box</Link></h6>\n          </Row>\n        </Col>\n      </Row>\n      <Form className=\"form-screens\" onSubmit={submitHandler}>\n        <Col>\n          <h2>Edit Info Box</h2>\n        </Col>\n        {loadingUpdate && <LoadingBox></LoadingBox>}\n        {errorUpdate && <MessageBox variant=\"danger\">{errorUpdate}</MessageBox>}\n        {loading ? (\n          <LoadingBox></LoadingBox>\n        ) : error ? (\n          <MessageBox variant=\"danger\">{error}</MessageBox>\n        ) : (\n              <Fragment>\n                <Col>\n                  <Input\n                    element=\"input\"\n                    type=\"text\"\n                    id=\"name\"\n                    placeholder=\"Enter name\"\n                    value={name}\n                    onChange={(e) => setName(e.target.value)}\n                    label=\"Name\"\n                  ></Input>\n                </Col>\n                <Col>\n                  <Input\n                    element=\"input\"\n                    type=\"text\"\n                    id=\"title\"\n                    placeholder=\"Enter title\"\n                    value={title}\n                    onChange={(e) => setTitle(e.target.value)}\n                    label=\"Title\"\n                  ></Input>\n                </Col>\n                <Col>\n                  <Input\n                    element=\"input\"\n                    type=\"text\"\n                    id=\"text\"\n                    placeholder=\"Enter text\"\n                    value={text}\n                    onChange={(e) => setText(e.target.value)}\n                    label=\"Text\"\n                  ></Input>\n                </Col>\n                <Col>\n                  <Input\n                    element=\"input\"\n                    type=\"text\"\n                    id=\"link\"\n                    placeholder=\"Enter link\"\n                    value={link}\n                    onChange={(e) => setLink(e.target.value)}\n                    label=\"Link\"\n                  ></Input>\n                </Col>\n                <Col>\n                  <Input\n                    element=\"input\"\n                    type=\"text\"\n                    id=\"image\"\n                    placeholder=\"Enter image\"\n                    value={image}\n                    onChange={(e) => setImage(e.target.value)}\n                    label=\"Image\"\n                  ></Input>\n                </Col>\n                <Col>\n                  <Form.Group>\n                    <Form.File\n                      type=\"file\"\n                      id=\"imageFile\"\n                      label=\"Image file\"\n                      onChange={uploadFileHandler} />\n                  </Form.Group>\n                </Col>\n                <Col>\n                  <CustomedButton\n                    type=\"submit\"\n                    class=\"full-width margin-top btn-weight\"\n                    variant=\"dark\"\n                  >\n                    Update\n                </CustomedButton>\n                </Col>\n                <Col>\n                  {loadingUpdate && <LoadingBox></LoadingBox>}\n                  {errorUpdate && (\n                    <MessageBox variant=\"danger\">{errorUpdate}</MessageBox>\n                  )}\n                  {successUpdate && (\n                    <MessageBox variant=\"success margin-top\">\n                      Updated\n                    </MessageBox>\n                  )}\n                </Col>\n              </Fragment>\n            )}\n      </Form>\n    </Container>\n  )\n}\n\nexport default InfoBoxEditScreen;","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/containers/Screens/LoyaltyProgramScreen.js",[],"/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/containers/Screens/MapScreen.js",[],"/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/containers/Screens/OrderHistoryScreen.js",[],"/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/containers/Screens/OrderListScreen.js",[],"/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/containers/Screens/OrderScreen.js",[],"/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/containers/Screens/ProductEditScreen.js",[],"/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/containers/Screens/ProductListScreen.js",[],"/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/containers/Screens/ProfileScreen.js",[],"/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/containers/Screens/RecommendedCategoryListScreen.js",[],"/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/containers/Screens/ReturnPolicyScreen.js",[],"/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/containers/Screens/SettingsScreen.js",[],"/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/containers/Screens/SubcategoryScreen.js",["516","517"],"import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams, Link } from 'react-router-dom';\n\nimport Newsletter from '../../components/Newsletter';\nimport ProductCard from '../../components/ProductCart';\nimport Banner from '../../components/Banner';\nimport InfoBox from '../../components/InfoBox';\nimport LoadingBox from '../../components/LoadingBox';\nimport MessageBox from '../../components/MessageBox';\nimport { listProductBrands, listProductCategories, listProducts } from '../../actions/productActions';\nimport { listInfoBoxes } from '../../actions/infoBoxActions';\nimport { listBanners } from '../../actions/bannerActions';\n\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form'\nimport { Fragment } from 'react';\n\n\nconst SubcategoryScreen = (props) => {\n\n    const subcategoryId = props.match.params.subcategory;\n\n    const { \n        name = 'all',\n        category = 'all',\n        brand = 'all',\n        min = 0,\n        max = 0,\n        order = 'newest',\n    } = useParams();\n\n    const infoBoxList = useSelector(state => state.infoBoxList);\n    const { loading: loadingInfoBox, error: errorInfoBox, infoBoxes } = infoBoxList;\n\n    const productList = useSelector(state => state.productList);\n    const { loading, error, products } = productList;\n\n    const bannerList = useSelector(state => state.bannerList);\n    const { loading: loadingBanner, error: errorBanner, banners } = bannerList;\n\n    const productCategoryList = useSelector((state) => state.productCategoryList);\n    const { loading: loadingCategories, error: errorCategories, categories } = productCategoryList;\n\n    const productBrandList = useSelector((state) => state.productBrandList);\n    const { loading: loadingBrands, error: errorBrands, brands } = productBrandList;\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(listInfoBoxes());\n    }, [dispatch]);\n\n    useEffect(() => {\n        dispatch(listBanners());\n    }, [dispatch]);\n\n    useEffect(() => {\n        dispatch(listProductCategories());\n    }, [dispatch]);\n\n    useEffect(() => {\n        dispatch(listProductBrands());\n    }, [dispatch]);\n\n    useEffect(() => {\n        dispatch(\n            listProducts({\n                name: name !== 'all' ? name : '',\n                category: category !== 'all' ? category : '',\n                brand: brand !== 'all' ? brand : '',\n                min,\n                max,\n                order,\n            })\n        );\n    }, [category, dispatch, max, min, name, order, brand]);\n\n    const getFilterUrl = (filter) => {\n        const filterCategory = filter.category || category;\n        const filterBrand = filter.brand || brand;\n        const filterName = filter.name || name;\n        const sortOrder = filter.order || order;\n        const filterMin = filter.min ? filter.min : filter.min === 0 ? 0 : min;\n        const filterMax = filter.max ? filter.max : filter.max === 0 ? 0 : max;\n        return `/search/category/${filterCategory}/brand/${filterBrand}/name/${filterName}/min/${filterMin}/max/${filterMax}/order/${sortOrder}`;\n    };\n\n    return (\n        <Container>\n            <Row>\n                <Col lg={3}>\n                    <Row>\n                        <Col lg={12} md={12} sm={12} xs={12}>\n                        </Col>\n                    </Row>\n                </Col>\n                <Col lg={9} md={12} sm={12} xs={12}>\n                    <Row className=\"breadcumber\">\n                        <h6 className=\"breadcumber-box\"><Link to=\"/\">Home</Link></h6>\n                        <h6 className=\"breadcumber-box\"><Link to={`/products/sub/${subcategoryId}`}>{subcategoryId.charAt(0).toUpperCase() + subcategoryId.slice(1)}</Link></h6>\n                    </Row>\n                </Col>\n            </Row>\n            <Row>\n                <Col lg={3} md={12}>\n                    {loadingInfoBox ? (\n                        <LoadingBox></LoadingBox>\n                    ) : errorInfoBox ? (\n                        <MessageBox variant=\"danger\">{error}</MessageBox>\n                    ) : (\n                                <Row>\n                                    <Col lg={12} md={4} className=\"search-box\">\n                                        <Form.Control\n                                            id={props.id}\n                                            className=\"search-option\"\n                                            as=\"select\"\n                                            value={order}\n                                            onChange={(e) => {\n                                                props.history.push(getFilterUrl({ order: e.target.value }));\n                                            }}\n                                        >\n                                            <option value=\"newest\">Newest Arrivals</option>\n                                            <option value=\"lowest\">Price: Low to High</option>\n                                            <option value=\"highest\">Price: High to Low</option>\n                                        </Form.Control>\n                                        {loadingCategories ? (\n                                            <LoadingBox></LoadingBox>\n                                        ) : errorCategories ? (\n                                            <MessageBox variant=\"danger\">{errorCategories}</MessageBox>\n                                        ) : (\n                                                    <Form.Control\n                                                        id={props.id}\n                                                        className=\"search-option\"\n                                                        as=\"select\"\n                                                        value={category}\n                                                        onChange={(e) => {\n                                                            props.history.push(getFilterUrl({ category: e.target.value }));\n                                                        }}\n                                                    >\n                                                        <option value=\"all\">Category: All</option>\n                                                        {categories.map((c) => (\n                                                            <option value={c}>{c.charAt(0).toUpperCase() + c.slice(1)}</option>\n                                                        ))}\n                                                    </Form.Control>\n                                                )}\n                                        {loadingBrands ? (\n                                            <LoadingBox></LoadingBox>\n                                        ) : errorBrands ? (\n                                            <MessageBox variant=\"danger\">{errorBrands}</MessageBox>\n                                        ) : (\n                                                    <Form.Control\n                                                        id={props.id}\n                                                        className=\"search-option\"\n                                                        as=\"select\"\n                                                        value={brand}\n                                                        onChange={(e) => {\n                                                            props.history.push(getFilterUrl({ brand: e.target.value }));\n                                                        }}\n                                                    >\n                                                        <option value=\"all\">Brand: All</option>\n                                                        {brands.map((b) => (\n                                                            <option value={b}>{b.charAt(0).toUpperCase() + b.slice(1)}</option>\n                                                        ))}\n                                                    </Form.Control>\n                                                )}\n                                    </Col>\n                                    {infoBoxes.map(infoBox => {\n                                        return (\n                                            <InfoBox key={infoBox._id} infoBox={infoBox} />\n                                        )\n                                    })}\n                                </Row>\n                            )}\n                </Col>\n                {loading ? (\n                    <LoadingBox></LoadingBox>\n                ) : error ? (\n                    <MessageBox variant=\"danger\">{error}</MessageBox>\n                ) : (\n                            <Col lg={9}>\n                                <Row>\n                                    {loadingBanner ? (\n                                        <LoadingBox></LoadingBox>\n                                    ) : errorBanner ? (\n                                        <MessageBox variant=\"danger\">{error}</MessageBox>\n                                    ) : (\n                                                <Fragment>\n                                                    {banners.map(banner => {\n                                                        if (banner.subcategory === subcategoryId) {\n                                                            return (\n                                                                <Banner className=\"remove-margin-top\" key={banner._id} banner={banner} />\n                                                            )\n                                                        }\n                                                        if (banner.category === 'home') {\n                                                            return (\n                                                                <Banner className=\"remove-margin-top\" key={banner._id} banner={banner} />\n                                                            )\n                                                        }\n                                                    })}\n                                                </Fragment>\n                                            )}\n                                </Row>\n                                <Row>\n                                    {products.map(product => {\n                                        if (product.subcategory === subcategoryId)\n                                            return (\n                                                <ProductCard\n                                                    key={product._id} product={product} />\n                                            )\n                                    })}\n                                </Row>\n\n                            </Col>\n                        )}\n            </Row>\n            <Newsletter />\n        </Container>\n\n    )\n}\n\nexport default SubcategoryScreen;","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/containers/Screens/UserEditScreen.js",[],"/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/containers/Screens/UserInvoiceAddressScreen.js",[],"/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/containers/Screens/UserListScreen.js",[],"/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/containers/Screens/ShippingAddressScreen.js",[],"/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/containers/Screens/RegisterScreen.js",[],"/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/containers/Screens/PlaceOrderScreen.js",[],"/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/containers/Screens/ShippingMethodScreen.js",[],"/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/containers/Screens/SigninScreen.js",[],"/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/containers/Screens/NewsletterListScreen.js",["518"],"import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\n\n\nimport LoadingBox from '../../components/LoadingBox';\nimport MessageBox from '../../components/MessageBox';\nimport CustomedButton from '../../components/UI/CustomedButton';\nimport SettingsBox from '../../components/SettingsBox';\n\nimport Container from 'react-bootstrap/esm/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Table from 'react-bootstrap/Table';\nimport Form from 'react-bootstrap/Form';\nimport { NEWSLETTER_DELETE_RESET } from '../../constants/newsletterConstants';\nimport { deleteNewsletter, listNewsletters } from '../../actions/newsletterActions';\nimport Input from '../../components/UI/Input';\n\n\nconst NewsletterListScreen = (props) => {\n\n  const newsletterList = useSelector((state) => state.newsletterList);\n  const { loading, error, newsletters } = newsletterList;\n\n  const newsletterDelete = useSelector((state) => state.newsletterDelete);\n  const {\n    loading: loadingDelete,\n    error: errorDelete,\n    success: successDelete,\n  } = newsletterDelete;\n\n  const [email, setEmail] = useState('');\n  const [foundEmail, setFoundEmail] = useState('');\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    setFoundEmail(email);\n  }\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (successDelete) {\n      dispatch({ type: NEWSLETTER_DELETE_RESET });\n    }\n    dispatch(listNewsletters({}));\n  }, [dispatch, props.history, successDelete]);\n\n  const deleteHandler = (newsletter) => {\n    if (window.confirm('Are you sure to delete?')) {\n      dispatch(deleteNewsletter(newsletter._id));\n      props.history.push('/settings/newsletterlist');\n    }\n  };\n\n  return (\n    <Container>\n      <Row>\n        <Col lg={12} md={12} sm={12} xs={12}>\n          <Row className=\"breadcumber\">\n            <h6 className=\"breadcumber-box\"><Link to=\"/\">Home</Link></h6>\n            <h6 className=\"breadcumber-box\"><Link to=\"/settings\">Settings</Link></h6>\n            <h6 className=\"breadcumber-box\"><Link to=\"/settings/coverlist\">Cover List</Link></h6>\n          </Row>\n        </Col>\n      </Row>\n      <Row>\n        <Col lg={3}>\n          <SettingsBox />\n        </Col>\n        <Col lg={9} className=\"setting-margin-top\">\n          <Row>\n            <Col>\n              <h2 className=\"title-margin-bottom\">List of Emails</h2>\n            </Col>\n          </Row>\n          <Form className=\"form-screens\" onSubmit={submitHandler}>\n            <Col>\n              <Input\n                element=\"input\"\n                type=\"email\"\n                id=\"email\"\n                placeholder=\"Enter email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              ></Input>\n            </Col>\n            <Col>\n              <CustomedButton\n                type=\"submit\"\n                class=\"full-width margin-top btn-weight\"\n                variant=\"dark\"\n              >\n                Check\n                </CustomedButton>\n            </Col>\n          </Form>\n          {loadingDelete && <LoadingBox></LoadingBox>}\n          {errorDelete && <MessageBox variant=\"danger\">{errorDelete}</MessageBox>}\n          {loading ? (\n            <LoadingBox></LoadingBox>\n          ) : error ? (\n            <MessageBox variant=\"danger\">{error}</MessageBox>\n          ) : (\n                <Table responsive=\"sm\" striped bordered hover className=\"table table-top-margin\">\n                  <thead>\n                    <tr>\n                      <th>ID</th>\n                      <th>EMAIL</th>\n                      <th>ACTION</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {newsletters.map((newsletter) => {\n                      if (foundEmail === newsletter.email) {\n                        return (\n                          <tr key={newsletter._id}>\n                            <td>{newsletter._id}</td>\n                            <td>{newsletter.email}</td>\n                            <td>\n                              <CustomedButton\n                                type=\"button\"\n                                className=\"full-width\"\n                                variant=\"dark\"\n                                onClick={() => deleteHandler(newsletter)}\n                              >\n                                Delete\n                    </CustomedButton>\n                            </td>\n                          </tr>\n                        )\n                      }\n                    })}\n                  </tbody>\n                </Table>\n              )}\n        </Col>\n      </Row>\n\n    </Container>\n  )\n}\n\nexport default NewsletterListScreen;","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/constants/contactFormConstants.js",[],"/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/reducers/contactFormReducers.js",[],"/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/containers/Screens/ContactUsScreen.js",[],"/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/containers/Screens/AdminMessageListScreen.js",[],"/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/actions/contactFormActions.js",["519"],"import Axios from 'axios';\nimport {   CONTACTFORM_CREATE_FAIL,\n    CONTACTFORM_CREATE_REQUEST,\n    CONTACTFORM_CREATE_SUCCESS,\n    CONTACTFORM_DETAILS_FAIL,\n    CONTACTFORM_DETAILS_REQUEST,\n    CONTACTFORM_DETAILS_SUCCESS,\n    CONTACTFORM_LIST_FAIL,\n    CONTACTFORM_LIST_REQUEST,\n    CONTACTFORM_LIST_SUCCESS,\n    CONTACTFORM_DELETE_REQUEST,\n    CONTACTFORM_DELETE_FAIL,\n    CONTACTFORM_DELETE_SUCCESS,\n    CONTACTFORM_MINE_LIST_REQUEST,\n    CONTACTFORM_MINE_LIST_SUCCESS,\n    CONTACTFORM_MINE_LIST_FAIL, } from '../constants/contactFormConstants';\n\nexport const listContactForms = ({\n  pageNumber = '',\n}) => async (dispatch, getState) => {\n    dispatch({ type: CONTACTFORM_LIST_REQUEST });\n    const {\n      userSignin: { userInfo },\n    } = getState();\n    try {\n        const { data } = await Axios.get(`/api/contactforms?pageNumber=${pageNumber}`, {\n          headers: { Authorization: `Bearer ${userInfo.token}` },\n        });\n        dispatch({ type: CONTACTFORM_LIST_SUCCESS, payload: data })\n    }\n    catch (error) {\n        dispatch({ type: CONTACTFORM_LIST_FAIL, payload: error.message })\n    }\n}\n\nexport const listContactFormsMine = ({\n  pageNumber = '',\n}) => async (dispatch, getState) => {\n    dispatch({ type: CONTACTFORM_MINE_LIST_REQUEST });\n    const {\n      userSignin: { userInfo },\n    } = getState();\n    try {\n        const { data } = await Axios.get(`/api/contactforms/mine?pageNumber=${pageNumber}`, {\n          headers: {\n            Authorization: `Bearer ${userInfo.token}`,\n          },\n        });\n        dispatch({ type: CONTACTFORM_MINE_LIST_SUCCESS, payload: data })\n    }\n    catch (error) {\n        dispatch({ type: CONTACTFORM_MINE_LIST_FAIL, payload: error.message })\n    }\n}\n\nexport const detailsContactForm = (contactFormId) => async (dispatch, getState) => {\n    dispatch({ type: CONTACTFORM_DETAILS_REQUEST, payload: contactFormId });\n    try {\n      const {\n        userSignin: { userInfo },\n      } = getState();\n      const { data } = await Axios.get(`/api/contactforms/${contactFormId}`, {\n        headers: {\n          Authorization: `Bearer ${userInfo.token}`,\n        },\n      });\n      dispatch({ type: CONTACTFORM_DETAILS_SUCCESS, payload: data });\n    } catch (error) {\n      dispatch({\n        type: CONTACTFORM_DETAILS_FAIL,\n        payload:\n          error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n      });\n    }\n  };\n\n  export const createContactForm = (name, email, title, text) => async (dispatch, getState) => {\n    dispatch({ type: CONTACTFORM_CREATE_REQUEST, payload: { name, email, title, text } });\n    try {\n      const { data } = await Axios.post(\n        '/api/contactforms',\n        { name, email, title, text }\n      );\n      dispatch({\n        type: CONTACTFORM_CREATE_SUCCESS,\n        payload: data,\n      });\n    } catch (error) {\n      const message =\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message;\n      dispatch({ type: CONTACTFORM_CREATE_FAIL, payload: message });\n    }\n  };\n\n  export const deleteContactForm = (contactFormId) => async (dispatch, getState) => {\n    dispatch({ type: CONTACTFORM_DELETE_REQUEST, payload: contactFormId });\n    const {\n      userSignin: { userInfo },\n    } = getState();\n    try {\n      const { data } = Axios.delete(`/api/contactforms/${contactFormId}`, {\n        headers: { Authorization: `Bearer ${userInfo.token}` },\n      });\n      dispatch({ type: CONTACTFORM_DELETE_SUCCESS });\n    } catch (error) {\n      const message =\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message;\n      dispatch({ type: CONTACTFORM_DELETE_FAIL, payload: message });\n    }\n  };","/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/containers/Screens/AboutUsScreen.js",[],"/Users/tomaszkolodziej/Desktop/web/ecommerce-store/frontend/src/containers/Screens/MessageDetailsScreen.js",["520","521"],{"ruleId":"522","replacedBy":"523"},{"ruleId":"524","replacedBy":"525"},{"ruleId":"522","replacedBy":"526"},{"ruleId":"524","replacedBy":"527"},{"ruleId":"522","replacedBy":"528"},{"ruleId":"524","replacedBy":"529"},{"ruleId":"522","replacedBy":"530"},{"ruleId":"524","replacedBy":"531"},{"ruleId":"522","replacedBy":"532"},{"ruleId":"524","replacedBy":"533"},{"ruleId":"522","replacedBy":"534"},{"ruleId":"524","replacedBy":"535"},{"ruleId":"536","severity":1,"message":"537","line":97,"column":15,"nodeType":"538","messageId":"539","endLine":97,"endColumn":19},{"ruleId":"536","severity":1,"message":"540","line":2,"column":25,"nodeType":"538","messageId":"539","endLine":2,"endColumn":43},{"ruleId":"522","replacedBy":"541"},{"ruleId":"524","replacedBy":"542"},{"ruleId":"543","severity":1,"message":"544","line":63,"column":35,"nodeType":"545","messageId":"546","endLine":63,"endColumn":37},{"ruleId":"543","severity":1,"message":"544","line":74,"column":35,"nodeType":"545","messageId":"546","endLine":74,"endColumn":37},{"ruleId":"522","replacedBy":"547"},{"ruleId":"524","replacedBy":"548"},{"ruleId":"536","severity":1,"message":"537","line":96,"column":15,"nodeType":"538","messageId":"539","endLine":96,"endColumn":19},{"ruleId":"536","severity":1,"message":"537","line":96,"column":15,"nodeType":"538","messageId":"539","endLine":96,"endColumn":19},{"ruleId":"522","replacedBy":"549"},{"ruleId":"524","replacedBy":"550"},{"ruleId":"536","severity":1,"message":"551","line":20,"column":18,"nodeType":"538","messageId":"539","endLine":20,"endColumn":31},{"ruleId":"536","severity":1,"message":"552","line":21,"column":16,"nodeType":"538","messageId":"539","endLine":21,"endColumn":27},{"ruleId":"536","severity":1,"message":"537","line":139,"column":13,"nodeType":"538","messageId":"539","endLine":139,"endColumn":17},{"ruleId":"536","severity":1,"message":"537","line":82,"column":15,"nodeType":"538","messageId":"539","endLine":82,"endColumn":19},{"ruleId":"522","replacedBy":"553"},{"ruleId":"524","replacedBy":"554"},{"ruleId":"536","severity":1,"message":"537","line":96,"column":15,"nodeType":"538","messageId":"539","endLine":96,"endColumn":19},{"ruleId":"522","replacedBy":"555"},{"ruleId":"524","replacedBy":"556"},{"ruleId":"522","replacedBy":"557"},{"ruleId":"524","replacedBy":"558"},{"ruleId":"522","replacedBy":"559"},{"ruleId":"524","replacedBy":"560"},{"ruleId":"536","severity":1,"message":"537","line":96,"column":15,"nodeType":"538","messageId":"539","endLine":96,"endColumn":19},{"ruleId":"543","severity":1,"message":"544","line":197,"column":73,"nodeType":"545","messageId":"546","endLine":197,"endColumn":75},{"ruleId":"536","severity":1,"message":"561","line":64,"column":10,"nodeType":"538","messageId":"539","endLine":64,"endColumn":23},{"ruleId":"536","severity":1,"message":"562","line":65,"column":10,"nodeType":"538","messageId":"539","endLine":65,"endColumn":21},{"ruleId":"536","severity":1,"message":"561","line":64,"column":14,"nodeType":"538","messageId":"539","endLine":64,"endColumn":27},{"ruleId":"536","severity":1,"message":"562","line":65,"column":14,"nodeType":"538","messageId":"539","endLine":65,"endColumn":25},{"ruleId":"536","severity":1,"message":"561","line":70,"column":14,"nodeType":"538","messageId":"539","endLine":70,"endColumn":27},{"ruleId":"536","severity":1,"message":"562","line":71,"column":14,"nodeType":"538","messageId":"539","endLine":71,"endColumn":25},{"ruleId":"543","severity":1,"message":"544","line":192,"column":73,"nodeType":"545","messageId":"546","endLine":192,"endColumn":75},{"ruleId":"543","severity":1,"message":"544","line":208,"column":59,"nodeType":"545","messageId":"546","endLine":208,"endColumn":61},{"ruleId":"536","severity":1,"message":"561","line":65,"column":10,"nodeType":"538","messageId":"539","endLine":65,"endColumn":23},{"ruleId":"536","severity":1,"message":"562","line":66,"column":10,"nodeType":"538","messageId":"539","endLine":66,"endColumn":21},{"ruleId":"543","severity":1,"message":"544","line":96,"column":33,"nodeType":"545","messageId":"546","endLine":96,"endColumn":35},{"ruleId":"536","severity":1,"message":"561","line":70,"column":10,"nodeType":"538","messageId":"539","endLine":70,"endColumn":23},{"ruleId":"536","severity":1,"message":"562","line":71,"column":10,"nodeType":"538","messageId":"539","endLine":71,"endColumn":21},{"ruleId":"543","severity":1,"message":"544","line":191,"column":73,"nodeType":"545","messageId":"546","endLine":191,"endColumn":75},{"ruleId":"543","severity":1,"message":"544","line":207,"column":59,"nodeType":"545","messageId":"546","endLine":207,"endColumn":61},{"ruleId":"543","severity":1,"message":"544","line":116,"column":51,"nodeType":"545","messageId":"546","endLine":116,"endColumn":53},{"ruleId":"536","severity":1,"message":"537","line":105,"column":15,"nodeType":"538","messageId":"539","endLine":105,"endColumn":19},{"ruleId":"563","severity":1,"message":"564","line":40,"column":29,"nodeType":"565","endLine":40,"endColumn":51},{"ruleId":"563","severity":1,"message":"564","line":43,"column":29,"nodeType":"565","endLine":43,"endColumn":51},"no-native-reassign",["566"],"no-negated-in-lhs",["567"],["566"],["567"],["566"],["567"],["566"],["567"],["566"],["567"],["566"],["567"],"no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","'CART_ADD_ITEM_FAIL' is defined but never used.",["566"],["567"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",["566"],["567"],["566"],["567"],"'loadingCreate' is assigned a value but never used.","'errorCreate' is assigned a value but never used.",["566"],["567"],["566"],["567"],["566"],["567"],["566"],["567"],"'loadingUpload' is assigned a value but never used.","'errorUpload' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation"]